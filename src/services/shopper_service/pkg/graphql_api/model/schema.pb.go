// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: model/schema.proto

package model

import (
	proto "github.com/golang/protobuf/proto"
	_ "github.com/infobloxopen/protoc-gen-gorm/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ShopperAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName string `protobuf:"bytes,2,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName  string `protobuf:"bytes,3,opt,name=lastName,proto3" json:"lastName,omitempty"`
	Email     string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Username  string `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	Phone     string `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
	IsActive  bool   `protobuf:"varint,7,opt,name=isActive,proto3" json:"isActive,omitempty"`
	// wether the customer accepts marketing emails at the email provided
	AcceptsMarketing bool `protobuf:"varint,8,opt,name=acceptsMarketing,proto3" json:"acceptsMarketing,omitempty"`
	// time at which the customer has agreed to accept marketing material
	AcceptedMarketingAt string `protobuf:"bytes,9,opt,name=acceptedMarketingAt,proto3" json:"acceptedMarketingAt,omitempty"`
	// list of addresses associated with the customer
	Addresses []*Address `protobuf:"bytes,10,rep,name=addresses,proto3" json:"addresses,omitempty"`
	// list of tags associated with the customer
	Tags []string `protobuf:"bytes,11,rep,name=tags,proto3" json:"tags,omitempty"`
	// list of causes the customer cares about
	Causes     []*SubscribedTopic `protobuf:"bytes,12,rep,name=causes,proto3" json:"causes,omitempty"`
	CreditCard *CreditCard        `protobuf:"bytes,13,opt,name=creditCard,proto3" json:"creditCard,omitempty"`
	// topics of interest to the shopper
	SubscribedTopics []*SubscribedTopic `protobuf:"bytes,14,rep,name=subscribedTopics,proto3" json:"subscribedTopics,omitempty"`
	AuthnId          uint32             `protobuf:"varint,15,opt,name=authnId,proto3" json:"authnId,omitempty"`
	Password         string             `protobuf:"bytes,16,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *ShopperAccount) Reset() {
	*x = ShopperAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_schema_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopperAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopperAccount) ProtoMessage() {}

func (x *ShopperAccount) ProtoReflect() protoreflect.Message {
	mi := &file_model_schema_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopperAccount.ProtoReflect.Descriptor instead.
func (*ShopperAccount) Descriptor() ([]byte, []int) {
	return file_model_schema_proto_rawDescGZIP(), []int{0}
}

func (x *ShopperAccount) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ShopperAccount) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *ShopperAccount) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *ShopperAccount) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ShopperAccount) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ShopperAccount) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *ShopperAccount) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *ShopperAccount) GetAcceptsMarketing() bool {
	if x != nil {
		return x.AcceptsMarketing
	}
	return false
}

func (x *ShopperAccount) GetAcceptedMarketingAt() string {
	if x != nil {
		return x.AcceptedMarketingAt
	}
	return ""
}

func (x *ShopperAccount) GetAddresses() []*Address {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *ShopperAccount) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ShopperAccount) GetCauses() []*SubscribedTopic {
	if x != nil {
		return x.Causes
	}
	return nil
}

func (x *ShopperAccount) GetCreditCard() *CreditCard {
	if x != nil {
		return x.CreditCard
	}
	return nil
}

func (x *ShopperAccount) GetSubscribedTopics() []*SubscribedTopic {
	if x != nil {
		return x.SubscribedTopics
	}
	return nil
}

func (x *ShopperAccount) GetAuthnId() uint32 {
	if x != nil {
		return x.AuthnId
	}
	return 0
}

func (x *ShopperAccount) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type CreditCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CardNumber      string `protobuf:"bytes,2,opt,name=cardNumber,proto3" json:"cardNumber,omitempty"`
	CardBrand       string `protobuf:"bytes,3,opt,name=cardBrand,proto3" json:"cardBrand,omitempty"`
	ExpiresSoon     bool   `protobuf:"varint,4,opt,name=expiresSoon,proto3" json:"expiresSoon,omitempty"`
	ExpirationMonth int64  `protobuf:"varint,5,opt,name=expirationMonth,proto3" json:"expirationMonth,omitempty"`
	ExpirationYear  int64  `protobuf:"varint,6,opt,name=expirationYear,proto3" json:"expirationYear,omitempty"`
	// Card bin number
	FirstDigits string `protobuf:"bytes,7,opt,name=firstDigits,proto3" json:"firstDigits,omitempty"`
	// Card last digits
	LastDigits string `protobuf:"bytes,8,opt,name=lastDigits,proto3" json:"lastDigits,omitempty"`
	// Masked card with only 4 digits displayed
	MaskedNumber string `protobuf:"bytes,9,opt,name=maskedNumber,proto3" json:"maskedNumber,omitempty"`
	// name of card holder
	CardHolderName           string   `protobuf:"bytes,10,opt,name=cardHolderName,proto3" json:"cardHolderName,omitempty"`
	CreditCardBillingAddress *Address `protobuf:"bytes,11,opt,name=creditCardBillingAddress,proto3" json:"creditCardBillingAddress,omitempty"`
}

func (x *CreditCard) Reset() {
	*x = CreditCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_schema_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditCard) ProtoMessage() {}

func (x *CreditCard) ProtoReflect() protoreflect.Message {
	mi := &file_model_schema_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditCard.ProtoReflect.Descriptor instead.
func (*CreditCard) Descriptor() ([]byte, []int) {
	return file_model_schema_proto_rawDescGZIP(), []int{1}
}

func (x *CreditCard) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreditCard) GetCardNumber() string {
	if x != nil {
		return x.CardNumber
	}
	return ""
}

func (x *CreditCard) GetCardBrand() string {
	if x != nil {
		return x.CardBrand
	}
	return ""
}

func (x *CreditCard) GetExpiresSoon() bool {
	if x != nil {
		return x.ExpiresSoon
	}
	return false
}

func (x *CreditCard) GetExpirationMonth() int64 {
	if x != nil {
		return x.ExpirationMonth
	}
	return 0
}

func (x *CreditCard) GetExpirationYear() int64 {
	if x != nil {
		return x.ExpirationYear
	}
	return 0
}

func (x *CreditCard) GetFirstDigits() string {
	if x != nil {
		return x.FirstDigits
	}
	return ""
}

func (x *CreditCard) GetLastDigits() string {
	if x != nil {
		return x.LastDigits
	}
	return ""
}

func (x *CreditCard) GetMaskedNumber() string {
	if x != nil {
		return x.MaskedNumber
	}
	return ""
}

func (x *CreditCard) GetCardHolderName() string {
	if x != nil {
		return x.CardHolderName
	}
	return ""
}

func (x *CreditCard) GetCreditCardBillingAddress() *Address {
	if x != nil {
		return x.CreditCardBillingAddress
	}
	return nil
}

type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Street       string `protobuf:"bytes,2,opt,name=street,proto3" json:"street,omitempty"`
	Province     string `protobuf:"bytes,3,opt,name=province,proto3" json:"province,omitempty"`
	City         string `protobuf:"bytes,4,opt,name=city,proto3" json:"city,omitempty"`
	ZipCode      string `protobuf:"bytes,5,opt,name=zipCode,proto3" json:"zipCode,omitempty"`
	Country      string `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	CountryCode  string `protobuf:"bytes,7,opt,name=countryCode,proto3" json:"countryCode,omitempty"`
	ProvinceCode string `protobuf:"bytes,8,opt,name=provinceCode,proto3" json:"provinceCode,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_schema_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_model_schema_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_model_schema_proto_rawDescGZIP(), []int{2}
}

func (x *Address) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Address) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *Address) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *Address) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Address) GetZipCode() string {
	if x != nil {
		return x.ZipCode
	}
	return ""
}

func (x *Address) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Address) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *Address) GetProvinceCode() string {
	if x != nil {
		return x.ProvinceCode
	}
	return ""
}

type SubscribedTopic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SubscribedTopic *Topic `protobuf:"bytes,2,opt,name=subscribedTopic,proto3" json:"subscribedTopic,omitempty"`
	SubscribedAt    string `protobuf:"bytes,3,opt,name=subscribedAt,proto3" json:"subscribedAt,omitempty"`
	Description     string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *SubscribedTopic) Reset() {
	*x = SubscribedTopic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_schema_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribedTopic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribedTopic) ProtoMessage() {}

func (x *SubscribedTopic) ProtoReflect() protoreflect.Message {
	mi := &file_model_schema_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribedTopic.ProtoReflect.Descriptor instead.
func (*SubscribedTopic) Descriptor() ([]byte, []int) {
	return file_model_schema_proto_rawDescGZIP(), []int{3}
}

func (x *SubscribedTopic) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SubscribedTopic) GetSubscribedTopic() *Topic {
	if x != nil {
		return x.SubscribedTopic
	}
	return nil
}

func (x *SubscribedTopic) GetSubscribedAt() string {
	if x != nil {
		return x.SubscribedAt
	}
	return ""
}

func (x *SubscribedTopic) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Topic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tags            []string `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	TopicCoverImage *Image   `protobuf:"bytes,4,opt,name=topicCoverImage,proto3" json:"topicCoverImage,omitempty"`
}

func (x *Topic) Reset() {
	*x = Topic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_schema_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Topic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Topic) ProtoMessage() {}

func (x *Topic) ProtoReflect() protoreflect.Message {
	mi := &file_model_schema_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Topic.ProtoReflect.Descriptor instead.
func (*Topic) Descriptor() ([]byte, []int) {
	return file_model_schema_proto_rawDescGZIP(), []int{4}
}

func (x *Topic) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Topic) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Topic) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Topic) GetTopicCoverImage() *Image {
	if x != nil {
		return x.TopicCoverImage
	}
	return nil
}

type Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Metadata *ImageMeta `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	BlobUrl  string     `protobuf:"bytes,3,opt,name=blobUrl,proto3" json:"blobUrl,omitempty"`
	AltText  string     `protobuf:"bytes,4,opt,name=altText,proto3" json:"altText,omitempty"`
}

func (x *Image) Reset() {
	*x = Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_schema_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_model_schema_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_model_schema_proto_rawDescGZIP(), []int{5}
}

func (x *Image) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Image) GetMetadata() *ImageMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Image) GetBlobUrl() string {
	if x != nil {
		return x.BlobUrl
	}
	return ""
}

func (x *Image) GetAltText() string {
	if x != nil {
		return x.AltText
	}
	return ""
}

type ImageMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width     int32  `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height    int32  `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	RedData   []byte `protobuf:"bytes,3,opt,name=redData,proto3" json:"redData,omitempty"`
	GreenData []byte `protobuf:"bytes,4,opt,name=greenData,proto3" json:"greenData,omitempty"`
	BlueData  []byte `protobuf:"bytes,5,opt,name=blueData,proto3" json:"blueData,omitempty"`
}

func (x *ImageMeta) Reset() {
	*x = ImageMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_schema_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageMeta) ProtoMessage() {}

func (x *ImageMeta) ProtoReflect() protoreflect.Message {
	mi := &file_model_schema_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageMeta.ProtoReflect.Descriptor instead.
func (*ImageMeta) Descriptor() ([]byte, []int) {
	return file_model_schema_proto_rawDescGZIP(), []int{6}
}

func (x *ImageMeta) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *ImageMeta) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ImageMeta) GetRedData() []byte {
	if x != nil {
		return x.RedData
	}
	return nil
}

func (x *ImageMeta) GetGreenData() []byte {
	if x != nil {
		return x.GreenData
	}
	return nil
}

func (x *ImageMeta) GetBlueData() []byte {
	if x != nil {
		return x.BlueData
	}
	return nil
}

var File_model_schema_proto protoreflect.FileDescriptor

var file_model_schema_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x6f, 0x70, 0x65, 0x6e, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x67, 0x6f, 0x72, 0x6d, 0x2f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xad, 0x05, 0x0a, 0x0e, 0x53, 0x68, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42,
	0x12, 0xba, 0xb9, 0x19, 0x0e, 0x0a, 0x0c, 0x12, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x28,
	0x01, 0x48, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x10, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x30, 0x0a, 0x13, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x41, 0x74, 0x12, 0x4e, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x42, 0x26, 0xba, 0xb9, 0x19, 0x22, 0x2a, 0x20, 0x12, 0x0c, 0x12, 0x06, 0x73, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x40, 0x01, 0x48, 0x01, 0x22, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x30, 0x01, 0x38, 0x01, 0x40, 0x01, 0x48, 0x01, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x3e, 0x0a, 0x06, 0x63, 0x61, 0x75, 0x73, 0x65,
	0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x64, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x2a,
	0x0e, 0x12, 0x02, 0x40, 0x01, 0x22, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52,
	0x06, 0x63, 0x61, 0x75, 0x73, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x43, 0x61, 0x72, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x43, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x1a, 0x0e,
	0x12, 0x0c, 0x12, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x40, 0x01, 0x48, 0x01, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12, 0x56, 0x0a, 0x10, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x0e,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x64, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x42, 0x18, 0xba, 0xb9, 0x19, 0x14, 0x2a, 0x12, 0x22, 0x08,
	0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x30, 0x01, 0x38, 0x01, 0x40, 0x01, 0x48, 0x01,
	0x52, 0x10, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x49, 0x64, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x3a, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x08, 0x01,
	0x22, 0xca, 0x03, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12,
	0x22, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x12, 0xba, 0xb9, 0x19,
	0x0e, 0x0a, 0x0c, 0x12, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x28, 0x01, 0x48, 0x01, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x42, 0x72, 0x61, 0x6e, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x72, 0x64, 0x42, 0x72, 0x61, 0x6e,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x53, 0x6f, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x53,
	0x6f, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x26, 0x0a,
	0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x59, 0x65, 0x61, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x44, 0x69,
	0x67, 0x69, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x44, 0x69, 0x67, 0x69, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x44,
	0x69, 0x67, 0x69, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x73,
	0x74, 0x44, 0x69, 0x67, 0x69, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x73, 0x6b, 0x65,
	0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d,
	0x61, 0x73, 0x6b, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x63,
	0x61, 0x72, 0x64, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x61, 0x72, 0x64, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x50, 0x0a, 0x18, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72,
	0x64, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42,
	0x0a, 0xba, 0xb9, 0x19, 0x06, 0x1a, 0x04, 0x12, 0x02, 0x40, 0x01, 0x52, 0x18, 0x63, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x3a, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x08, 0x01, 0x22, 0xf7, 0x01,
	0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x12, 0xba, 0xb9, 0x19, 0x0e, 0x0a, 0x0c, 0x12, 0x06, 0x73,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x28, 0x01, 0x48, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x72, 0x65, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x7a, 0x69, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x7a, 0x69, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x3a,
	0x06, 0xba, 0xb9, 0x19, 0x02, 0x08, 0x01, 0x22, 0xc1, 0x01, 0x0a, 0x0f, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x22, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x12, 0xba, 0xb9, 0x19, 0x0e, 0x0a, 0x0c, 0x12,
	0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x28, 0x01, 0x48, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x3c, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x42, 0x0a, 0xba, 0xb9, 0x19, 0x06, 0x1a, 0x04, 0x12, 0x02, 0x40, 0x01, 0x52, 0x0f, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x22, 0x0a,
	0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x3a, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x08, 0x01, 0x22, 0x99, 0x01, 0x0a, 0x05,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x22, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x12, 0xba, 0xb9, 0x19, 0x0e, 0x0a, 0x0c, 0x12, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x28, 0x01, 0x48, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x12, 0x3c, 0x0a, 0x0f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x42, 0x0a, 0xba, 0xb9, 0x19, 0x06, 0x1a, 0x04, 0x12, 0x02, 0x40, 0x01, 0x52, 0x0f,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x3a,
	0x06, 0xba, 0xb9, 0x19, 0x02, 0x08, 0x01, 0x22, 0x8f, 0x01, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x22, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x12, 0xba,
	0xb9, 0x19, 0x0e, 0x0a, 0x0c, 0x12, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x28, 0x01, 0x48,
	0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a,
	0x07, 0x62, 0x6c, 0x6f, 0x62, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x62, 0x6c, 0x6f, 0x62, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x74, 0x54, 0x65,
	0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x6c, 0x74, 0x54, 0x65, 0x78,
	0x74, 0x3a, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x08, 0x01, 0x22, 0x8d, 0x01, 0x0a, 0x09, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x72, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1c, 0x0a, 0x09, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a,
	0x08, 0x62, 0x6c, 0x75, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x62, 0x6c, 0x75, 0x65, 0x44, 0x61, 0x74, 0x61, 0x42, 0x07, 0x5a, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_model_schema_proto_rawDescOnce sync.Once
	file_model_schema_proto_rawDescData = file_model_schema_proto_rawDesc
)

func file_model_schema_proto_rawDescGZIP() []byte {
	file_model_schema_proto_rawDescOnce.Do(func() {
		file_model_schema_proto_rawDescData = protoimpl.X.CompressGZIP(file_model_schema_proto_rawDescData)
	})
	return file_model_schema_proto_rawDescData
}

var file_model_schema_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_model_schema_proto_goTypes = []interface{}{
	(*ShopperAccount)(nil),  // 0: ShopperAccount
	(*CreditCard)(nil),      // 1: CreditCard
	(*Address)(nil),         // 2: Address
	(*SubscribedTopic)(nil), // 3: SubscribedTopic
	(*Topic)(nil),           // 4: Topic
	(*Image)(nil),           // 5: Image
	(*ImageMeta)(nil),       // 6: ImageMeta
}
var file_model_schema_proto_depIdxs = []int32{
	2, // 0: ShopperAccount.addresses:type_name -> Address
	3, // 1: ShopperAccount.causes:type_name -> SubscribedTopic
	1, // 2: ShopperAccount.creditCard:type_name -> CreditCard
	3, // 3: ShopperAccount.subscribedTopics:type_name -> SubscribedTopic
	2, // 4: CreditCard.creditCardBillingAddress:type_name -> Address
	4, // 5: SubscribedTopic.subscribedTopic:type_name -> Topic
	5, // 6: Topic.topicCoverImage:type_name -> Image
	6, // 7: Image.metadata:type_name -> ImageMeta
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_model_schema_proto_init() }
func file_model_schema_proto_init() {
	if File_model_schema_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_model_schema_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopperAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_schema_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_schema_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_schema_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribedTopic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_schema_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Topic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_schema_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_schema_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_model_schema_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_model_schema_proto_goTypes,
		DependencyIndexes: file_model_schema_proto_depIdxs,
		MessageInfos:      file_model_schema_proto_msgTypes,
	}.Build()
	File_model_schema_proto = out.File
	file_model_schema_proto_rawDesc = nil
	file_model_schema_proto_goTypes = nil
	file_model_schema_proto_depIdxs = nil
}
