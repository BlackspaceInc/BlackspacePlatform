// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: model/schema.proto

package model

import (
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/infobloxopen/protoc-gen-gorm/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type BusinessAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint32       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CompanyName    string       `protobuf:"bytes,2,opt,name=companyName,proto3" json:"companyName,omitempty"`
	CompanyAddress string       `protobuf:"bytes,3,opt,name=companyAddress,proto3" json:"companyAddress,omitempty"`
	PhoneNumber    *PhoneNumber `protobuf:"bytes,4,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	Category       string       `protobuf:"bytes,5,opt,name=category,proto3" json:"category,omitempty"`
	Media          *Media       `protobuf:"bytes,6,opt,name=media,proto3" json:"media,omitempty"`
	Password       string       `protobuf:"bytes,7,opt,name=password,proto3" json:"password,omitempty"`
	Email          string       `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`
	IsActive       bool         `protobuf:"varint,9,opt,name=isActive,proto3" json:"isActive,omitempty"`
	// define the types of businesses available
	TypeOfBusiness *BusinessType `protobuf:"bytes,10,opt,name=typeOfBusiness,proto3" json:"typeOfBusiness,omitempty"`
	// defines business top goals
	// sell products, market business, sell services, sell memberships, build community
	BusinessGoals []string `protobuf:"bytes,11,rep,name=businessGoals,proto3" json:"businessGoals,omitempty"`
	// the stage at which the business is at
	// collecting inspiration, formalizing an idea or personal project, project or hobby to business,
	// growing existing business
	BusinessStage string `protobuf:"bytes,12,opt,name=businessStage,proto3" json:"businessStage,omitempty"`
	// type of merchant
	MerchantType *MerchantType `protobuf:"bytes,13,opt,name=merchantType,proto3" json:"merchantType,omitempty"`
	// processing method details
	PaymentDetails *PaymentProcessingMethods `protobuf:"bytes,14,opt,name=paymentDetails,proto3" json:"paymentDetails,omitempty"`
	// types of services blackspace can manage on the business' behalf
	ServicesManagedByBlackspace *ServicesManagedByBlackspace `protobuf:"bytes,15,opt,name=servicesManagedByBlackspace,proto3" json:"servicesManagedByBlackspace,omitempty"`
	// business address
	FounderAddress *Address `protobuf:"bytes,16,opt,name=founderAddress,proto3" json:"founderAddress,omitempty"`
	// Business Interests
	SubscribedTopics *Topics `protobuf:"bytes,17,opt,name=subscribedTopics,proto3" json:"subscribedTopics,omitempty"`
	// authentication service ref
	AuthnId uint32 `protobuf:"varint,18,opt,name=authnId,proto3" json:"authnId,omitempty"`
}

func (x *BusinessAccount) Reset() {
	*x = BusinessAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_schema_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BusinessAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusinessAccount) ProtoMessage() {}

func (x *BusinessAccount) ProtoReflect() protoreflect.Message {
	mi := &file_model_schema_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusinessAccount.ProtoReflect.Descriptor instead.
func (*BusinessAccount) Descriptor() ([]byte, []int) {
	return file_model_schema_proto_rawDescGZIP(), []int{0}
}

func (x *BusinessAccount) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BusinessAccount) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *BusinessAccount) GetCompanyAddress() string {
	if x != nil {
		return x.CompanyAddress
	}
	return ""
}

func (x *BusinessAccount) GetPhoneNumber() *PhoneNumber {
	if x != nil {
		return x.PhoneNumber
	}
	return nil
}

func (x *BusinessAccount) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *BusinessAccount) GetMedia() *Media {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *BusinessAccount) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *BusinessAccount) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *BusinessAccount) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *BusinessAccount) GetTypeOfBusiness() *BusinessType {
	if x != nil {
		return x.TypeOfBusiness
	}
	return nil
}

func (x *BusinessAccount) GetBusinessGoals() []string {
	if x != nil {
		return x.BusinessGoals
	}
	return nil
}

func (x *BusinessAccount) GetBusinessStage() string {
	if x != nil {
		return x.BusinessStage
	}
	return ""
}

func (x *BusinessAccount) GetMerchantType() *MerchantType {
	if x != nil {
		return x.MerchantType
	}
	return nil
}

func (x *BusinessAccount) GetPaymentDetails() *PaymentProcessingMethods {
	if x != nil {
		return x.PaymentDetails
	}
	return nil
}

func (x *BusinessAccount) GetServicesManagedByBlackspace() *ServicesManagedByBlackspace {
	if x != nil {
		return x.ServicesManagedByBlackspace
	}
	return nil
}

func (x *BusinessAccount) GetFounderAddress() *Address {
	if x != nil {
		return x.FounderAddress
	}
	return nil
}

func (x *BusinessAccount) GetSubscribedTopics() *Topics {
	if x != nil {
		return x.SubscribedTopics
	}
	return nil
}

func (x *BusinessAccount) GetAuthnId() uint32 {
	if x != nil {
		return x.AuthnId
	}
	return 0
}

type Topics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Technology      bool   `protobuf:"varint,2,opt,name=Technology,proto3" json:"Technology,omitempty"`
	Health          bool   `protobuf:"varint,3,opt,name=Health,proto3" json:"Health,omitempty"`
	Food            bool   `protobuf:"varint,4,opt,name=Food,proto3" json:"Food,omitempty"`
	Science         bool   `protobuf:"varint,5,opt,name=Science,proto3" json:"Science,omitempty"`
	Music           bool   `protobuf:"varint,6,opt,name=Music,proto3" json:"Music,omitempty"`
	Travel          bool   `protobuf:"varint,7,opt,name=Travel,proto3" json:"Travel,omitempty"`
	Business        bool   `protobuf:"varint,8,opt,name=Business,proto3" json:"Business,omitempty"`
	Cooking         bool   `protobuf:"varint,9,opt,name=Cooking,proto3" json:"Cooking,omitempty"`
	FashionAndStyle bool   `protobuf:"varint,10,opt,name=FashionAndStyle,proto3" json:"FashionAndStyle,omitempty"`
	Design          bool   `protobuf:"varint,11,opt,name=Design,proto3" json:"Design,omitempty"`
	Art             bool   `protobuf:"varint,12,opt,name=Art,proto3" json:"Art,omitempty"`
}

func (x *Topics) Reset() {
	*x = Topics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_schema_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Topics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Topics) ProtoMessage() {}

func (x *Topics) ProtoReflect() protoreflect.Message {
	mi := &file_model_schema_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Topics.ProtoReflect.Descriptor instead.
func (*Topics) Descriptor() ([]byte, []int) {
	return file_model_schema_proto_rawDescGZIP(), []int{1}
}

func (x *Topics) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Topics) GetTechnology() bool {
	if x != nil {
		return x.Technology
	}
	return false
}

func (x *Topics) GetHealth() bool {
	if x != nil {
		return x.Health
	}
	return false
}

func (x *Topics) GetFood() bool {
	if x != nil {
		return x.Food
	}
	return false
}

func (x *Topics) GetScience() bool {
	if x != nil {
		return x.Science
	}
	return false
}

func (x *Topics) GetMusic() bool {
	if x != nil {
		return x.Music
	}
	return false
}

func (x *Topics) GetTravel() bool {
	if x != nil {
		return x.Travel
	}
	return false
}

func (x *Topics) GetBusiness() bool {
	if x != nil {
		return x.Business
	}
	return false
}

func (x *Topics) GetCooking() bool {
	if x != nil {
		return x.Cooking
	}
	return false
}

func (x *Topics) GetFashionAndStyle() bool {
	if x != nil {
		return x.FashionAndStyle
	}
	return false
}

func (x *Topics) GetDesign() bool {
	if x != nil {
		return x.Design
	}
	return false
}

func (x *Topics) GetArt() bool {
	if x != nil {
		return x.Art
	}
	return false
}

type Media struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Website   string `protobuf:"bytes,2,opt,name=website,proto3" json:"website,omitempty"`
	Instagram string `protobuf:"bytes,3,opt,name=instagram,proto3" json:"instagram,omitempty"`
	Facebook  string `protobuf:"bytes,4,opt,name=facebook,proto3" json:"facebook,omitempty"`
	LinkedIn  string `protobuf:"bytes,5,opt,name=linkedIn,proto3" json:"linkedIn,omitempty"`
	Pinterest string `protobuf:"bytes,6,opt,name=pinterest,proto3" json:"pinterest,omitempty"`
}

func (x *Media) Reset() {
	*x = Media{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_schema_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Media) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Media) ProtoMessage() {}

func (x *Media) ProtoReflect() protoreflect.Message {
	mi := &file_model_schema_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Media.ProtoReflect.Descriptor instead.
func (*Media) Descriptor() ([]byte, []int) {
	return file_model_schema_proto_rawDescGZIP(), []int{2}
}

func (x *Media) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Media) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *Media) GetInstagram() string {
	if x != nil {
		return x.Instagram
	}
	return ""
}

func (x *Media) GetFacebook() string {
	if x != nil {
		return x.Facebook
	}
	return ""
}

func (x *Media) GetLinkedIn() string {
	if x != nil {
		return x.LinkedIn
	}
	return ""
}

func (x *Media) GetPinterest() string {
	if x != nil {
		return x.Pinterest
	}
	return ""
}

type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address       string       `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	ApartmentUnit string       `protobuf:"bytes,2,opt,name=ApartmentUnit,proto3" json:"ApartmentUnit,omitempty"`
	ZipCode       string       `protobuf:"bytes,3,opt,name=ZipCode,proto3" json:"ZipCode,omitempty"`
	City          string       `protobuf:"bytes,4,opt,name=City,proto3" json:"City,omitempty"`
	State         string       `protobuf:"bytes,5,opt,name=State,proto3" json:"State,omitempty"`
	Birthdate     *DateOfBirth `protobuf:"bytes,6,opt,name=birthdate,proto3" json:"birthdate,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_schema_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_model_schema_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_model_schema_proto_rawDescGZIP(), []int{3}
}

func (x *Address) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Address) GetApartmentUnit() string {
	if x != nil {
		return x.ApartmentUnit
	}
	return ""
}

func (x *Address) GetZipCode() string {
	if x != nil {
		return x.ZipCode
	}
	return ""
}

func (x *Address) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Address) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Address) GetBirthdate() *DateOfBirth {
	if x != nil {
		return x.Birthdate
	}
	return nil
}

type DateOfBirth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Month string `protobuf:"bytes,1,opt,name=Month,proto3" json:"Month,omitempty"`
	Day   string `protobuf:"bytes,2,opt,name=Day,proto3" json:"Day,omitempty"`
	Year  string `protobuf:"bytes,3,opt,name=Year,proto3" json:"Year,omitempty"`
}

func (x *DateOfBirth) Reset() {
	*x = DateOfBirth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_schema_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DateOfBirth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DateOfBirth) ProtoMessage() {}

func (x *DateOfBirth) ProtoReflect() protoreflect.Message {
	mi := &file_model_schema_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DateOfBirth.ProtoReflect.Descriptor instead.
func (*DateOfBirth) Descriptor() ([]byte, []int) {
	return file_model_schema_proto_rawDescGZIP(), []int{4}
}

func (x *DateOfBirth) GetMonth() string {
	if x != nil {
		return x.Month
	}
	return ""
}

func (x *DateOfBirth) GetDay() string {
	if x != nil {
		return x.Day
	}
	return ""
}

func (x *DateOfBirth) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

type ServicesManagedByBlackspace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// create items or services to speed up checkout and enhance reports
	ItemCatalog bool `protobuf:"varint,1,opt,name=ItemCatalog,proto3" json:"ItemCatalog,omitempty"`
	// sell gift cards in store or online to boost sales
	GiftCards bool `protobuf:"varint,2,opt,name=GiftCards,proto3" json:"GiftCards,omitempty"`
	// provide discounts to boost visibility and sales
	Discounts bool `protobuf:"varint,3,opt,name=Discounts,proto3" json:"Discounts,omitempty"`
	// email your customers to tell them about promotions or special events
	MarketingCampaigns bool `protobuf:"varint,4,opt,name=MarketingCampaigns,proto3" json:"MarketingCampaigns,omitempty"`
	// keep your customers coming back with customized rewards program
	LoyaltyProgram bool `protobuf:"varint,5,opt,name=LoyaltyProgram,proto3" json:"LoyaltyProgram,omitempty"`
	// get access to financing by running your business on blackspace
	FundingYourBusiness bool `protobuf:"varint,6,opt,name=FundingYourBusiness,proto3" json:"FundingYourBusiness,omitempty"`
	// access analytics (indepth) data on buying trends
	Analytics bool `protobuf:"varint,7,opt,name=Analytics,proto3" json:"Analytics,omitempty"`
}

func (x *ServicesManagedByBlackspace) Reset() {
	*x = ServicesManagedByBlackspace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_schema_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServicesManagedByBlackspace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServicesManagedByBlackspace) ProtoMessage() {}

func (x *ServicesManagedByBlackspace) ProtoReflect() protoreflect.Message {
	mi := &file_model_schema_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServicesManagedByBlackspace.ProtoReflect.Descriptor instead.
func (*ServicesManagedByBlackspace) Descriptor() ([]byte, []int) {
	return file_model_schema_proto_rawDescGZIP(), []int{5}
}

func (x *ServicesManagedByBlackspace) GetItemCatalog() bool {
	if x != nil {
		return x.ItemCatalog
	}
	return false
}

func (x *ServicesManagedByBlackspace) GetGiftCards() bool {
	if x != nil {
		return x.GiftCards
	}
	return false
}

func (x *ServicesManagedByBlackspace) GetDiscounts() bool {
	if x != nil {
		return x.Discounts
	}
	return false
}

func (x *ServicesManagedByBlackspace) GetMarketingCampaigns() bool {
	if x != nil {
		return x.MarketingCampaigns
	}
	return false
}

func (x *ServicesManagedByBlackspace) GetLoyaltyProgram() bool {
	if x != nil {
		return x.LoyaltyProgram
	}
	return false
}

func (x *ServicesManagedByBlackspace) GetFundingYourBusiness() bool {
	if x != nil {
		return x.FundingYourBusiness
	}
	return false
}

func (x *ServicesManagedByBlackspace) GetAnalytics() bool {
	if x != nil {
		return x.Analytics
	}
	return false
}

type PaymentProcessingMethods struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentOptions []*PaymentOptions `protobuf:"bytes,1,rep,name=paymentOptions,proto3" json:"paymentOptions,omitempty"`
	Medium         []*PaymentMedium  `protobuf:"bytes,2,rep,name=medium,proto3" json:"medium,omitempty"`
}

func (x *PaymentProcessingMethods) Reset() {
	*x = PaymentProcessingMethods{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_schema_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentProcessingMethods) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentProcessingMethods) ProtoMessage() {}

func (x *PaymentProcessingMethods) ProtoReflect() protoreflect.Message {
	mi := &file_model_schema_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentProcessingMethods.ProtoReflect.Descriptor instead.
func (*PaymentProcessingMethods) Descriptor() ([]byte, []int) {
	return file_model_schema_proto_rawDescGZIP(), []int{6}
}

func (x *PaymentProcessingMethods) GetPaymentOptions() []*PaymentOptions {
	if x != nil {
		return x.PaymentOptions
	}
	return nil
}

func (x *PaymentProcessingMethods) GetMedium() []*PaymentMedium {
	if x != nil {
		return x.Medium
	}
	return nil
}

type PaymentMedium struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MobilePhone bool `protobuf:"varint,1,opt,name=MobilePhone,proto3" json:"MobilePhone,omitempty"`
	Tablet      bool `protobuf:"varint,2,opt,name=Tablet,proto3" json:"Tablet,omitempty"`
	Computer    bool `protobuf:"varint,3,opt,name=Computer,proto3" json:"Computer,omitempty"`
}

func (x *PaymentMedium) Reset() {
	*x = PaymentMedium{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_schema_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentMedium) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentMedium) ProtoMessage() {}

func (x *PaymentMedium) ProtoReflect() protoreflect.Message {
	mi := &file_model_schema_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentMedium.ProtoReflect.Descriptor instead.
func (*PaymentMedium) Descriptor() ([]byte, []int) {
	return file_model_schema_proto_rawDescGZIP(), []int{7}
}

func (x *PaymentMedium) GetMobilePhone() bool {
	if x != nil {
		return x.MobilePhone
	}
	return false
}

func (x *PaymentMedium) GetTablet() bool {
	if x != nil {
		return x.Tablet
	}
	return false
}

func (x *PaymentMedium) GetComputer() bool {
	if x != nil {
		return x.Computer
	}
	return false
}

type PaymentOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrickAndMortar  bool `protobuf:"varint,1,opt,name=BrickAndMortar,proto3" json:"BrickAndMortar,omitempty"`
	OnTheGo         bool `protobuf:"varint,2,opt,name=OnTheGo,proto3" json:"OnTheGo,omitempty"`
	Online          bool `protobuf:"varint,3,opt,name=Online,proto3" json:"Online,omitempty"`
	ThroughInvoices bool `protobuf:"varint,4,opt,name=ThroughInvoices,proto3" json:"ThroughInvoices,omitempty"`
}

func (x *PaymentOptions) Reset() {
	*x = PaymentOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_schema_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentOptions) ProtoMessage() {}

func (x *PaymentOptions) ProtoReflect() protoreflect.Message {
	mi := &file_model_schema_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentOptions.ProtoReflect.Descriptor instead.
func (*PaymentOptions) Descriptor() ([]byte, []int) {
	return file_model_schema_proto_rawDescGZIP(), []int{8}
}

func (x *PaymentOptions) GetBrickAndMortar() bool {
	if x != nil {
		return x.BrickAndMortar
	}
	return false
}

func (x *PaymentOptions) GetOnTheGo() bool {
	if x != nil {
		return x.OnTheGo
	}
	return false
}

func (x *PaymentOptions) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

func (x *PaymentOptions) GetThroughInvoices() bool {
	if x != nil {
		return x.ThroughInvoices
	}
	return false
}

type BusinessType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category    *BusinessCategory    `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	SubCategory *BusinessSubCategory `protobuf:"bytes,2,opt,name=subCategory,proto3" json:"subCategory,omitempty"`
}

func (x *BusinessType) Reset() {
	*x = BusinessType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_schema_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BusinessType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusinessType) ProtoMessage() {}

func (x *BusinessType) ProtoReflect() protoreflect.Message {
	mi := &file_model_schema_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusinessType.ProtoReflect.Descriptor instead.
func (*BusinessType) Descriptor() ([]byte, []int) {
	return file_model_schema_proto_rawDescGZIP(), []int{9}
}

func (x *BusinessType) GetCategory() *BusinessCategory {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *BusinessType) GetSubCategory() *BusinessSubCategory {
	if x != nil {
		return x.SubCategory
	}
	return nil
}

type BusinessCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tech                         bool `protobuf:"varint,1,opt,name=Tech,proto3" json:"Tech,omitempty"`
	CharitiesEducationMembership bool `protobuf:"varint,2,opt,name=CharitiesEducationMembership,proto3" json:"CharitiesEducationMembership,omitempty"`
	FoodAndDrink                 bool `protobuf:"varint,3,opt,name=FoodAndDrink,proto3" json:"FoodAndDrink,omitempty"`
	HealthCareAndFitness         bool `protobuf:"varint,4,opt,name=HealthCareAndFitness,proto3" json:"HealthCareAndFitness,omitempty"`
	HomeAndRepair                bool `protobuf:"varint,5,opt,name=HomeAndRepair,proto3" json:"HomeAndRepair,omitempty"`
	LeisureAndEntertainment      bool `protobuf:"varint,6,opt,name=LeisureAndEntertainment,proto3" json:"LeisureAndEntertainment,omitempty"`
	ProfessionalServices         bool `protobuf:"varint,7,opt,name=ProfessionalServices,proto3" json:"ProfessionalServices,omitempty"`
	Retail                       bool `protobuf:"varint,8,opt,name=Retail,proto3" json:"Retail,omitempty"`
	Transportation               bool `protobuf:"varint,9,opt,name=Transportation,proto3" json:"Transportation,omitempty"`
	BeautyAndPersonalCare        bool `protobuf:"varint,10,opt,name=BeautyAndPersonalCare,proto3" json:"BeautyAndPersonalCare,omitempty"`
}

func (x *BusinessCategory) Reset() {
	*x = BusinessCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_schema_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BusinessCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusinessCategory) ProtoMessage() {}

func (x *BusinessCategory) ProtoReflect() protoreflect.Message {
	mi := &file_model_schema_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusinessCategory.ProtoReflect.Descriptor instead.
func (*BusinessCategory) Descriptor() ([]byte, []int) {
	return file_model_schema_proto_rawDescGZIP(), []int{10}
}

func (x *BusinessCategory) GetTech() bool {
	if x != nil {
		return x.Tech
	}
	return false
}

func (x *BusinessCategory) GetCharitiesEducationMembership() bool {
	if x != nil {
		return x.CharitiesEducationMembership
	}
	return false
}

func (x *BusinessCategory) GetFoodAndDrink() bool {
	if x != nil {
		return x.FoodAndDrink
	}
	return false
}

func (x *BusinessCategory) GetHealthCareAndFitness() bool {
	if x != nil {
		return x.HealthCareAndFitness
	}
	return false
}

func (x *BusinessCategory) GetHomeAndRepair() bool {
	if x != nil {
		return x.HomeAndRepair
	}
	return false
}

func (x *BusinessCategory) GetLeisureAndEntertainment() bool {
	if x != nil {
		return x.LeisureAndEntertainment
	}
	return false
}

func (x *BusinessCategory) GetProfessionalServices() bool {
	if x != nil {
		return x.ProfessionalServices
	}
	return false
}

func (x *BusinessCategory) GetRetail() bool {
	if x != nil {
		return x.Retail
	}
	return false
}

func (x *BusinessCategory) GetTransportation() bool {
	if x != nil {
		return x.Transportation
	}
	return false
}

func (x *BusinessCategory) GetBeautyAndPersonalCare() bool {
	if x != nil {
		return x.BeautyAndPersonalCare
	}
	return false
}

type BusinessSubCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// art, marketing, travel, interior design, music, technology, food, restaurants, politics, health & beauty,
	// design, non-profit, jewelry, gaming, magazine, photography, fitness, consulting, fashion, services
	Marketing         bool `protobuf:"varint,1,opt,name=Marketing,proto3" json:"Marketing,omitempty"`
	Travel            bool `protobuf:"varint,2,opt,name=Travel,proto3" json:"Travel,omitempty"`
	Interior_Design   bool `protobuf:"varint,3,opt,name=Interior_Design,json=InteriorDesign,proto3" json:"Interior_Design,omitempty"`
	Music             bool `protobuf:"varint,4,opt,name=Music,proto3" json:"Music,omitempty"`
	Technology        bool `protobuf:"varint,5,opt,name=Technology,proto3" json:"Technology,omitempty"`
	Food              bool `protobuf:"varint,6,opt,name=Food,proto3" json:"Food,omitempty"`
	Restaurants       bool `protobuf:"varint,7,opt,name=Restaurants,proto3" json:"Restaurants,omitempty"`
	Polictics         bool `protobuf:"varint,8,opt,name=Polictics,proto3" json:"Polictics,omitempty"`
	Health_And_Beauty bool `protobuf:"varint,9,opt,name=Health_And_Beauty,json=HealthAndBeauty,proto3" json:"Health_And_Beauty,omitempty"`
	Design            bool `protobuf:"varint,10,opt,name=Design,proto3" json:"Design,omitempty"`
	Non_Profit        bool `protobuf:"varint,11,opt,name=Non_Profit,json=NonProfit,proto3" json:"Non_Profit,omitempty"`
	Jewelry           bool `protobuf:"varint,12,opt,name=Jewelry,proto3" json:"Jewelry,omitempty"`
	Gaming            bool `protobuf:"varint,13,opt,name=Gaming,proto3" json:"Gaming,omitempty"`
	Magazine          bool `protobuf:"varint,14,opt,name=Magazine,proto3" json:"Magazine,omitempty"`
	Photography       bool `protobuf:"varint,15,opt,name=Photography,proto3" json:"Photography,omitempty"`
	Fitenss           bool `protobuf:"varint,16,opt,name=Fitenss,proto3" json:"Fitenss,omitempty"`
	Consulting        bool `protobuf:"varint,17,opt,name=Consulting,proto3" json:"Consulting,omitempty"`
	Fashion           bool `protobuf:"varint,18,opt,name=Fashion,proto3" json:"Fashion,omitempty"`
	Services          bool `protobuf:"varint,19,opt,name=Services,proto3" json:"Services,omitempty"`
	Art               bool `protobuf:"varint,20,opt,name=Art,proto3" json:"Art,omitempty"`
}

func (x *BusinessSubCategory) Reset() {
	*x = BusinessSubCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_schema_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BusinessSubCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusinessSubCategory) ProtoMessage() {}

func (x *BusinessSubCategory) ProtoReflect() protoreflect.Message {
	mi := &file_model_schema_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusinessSubCategory.ProtoReflect.Descriptor instead.
func (*BusinessSubCategory) Descriptor() ([]byte, []int) {
	return file_model_schema_proto_rawDescGZIP(), []int{11}
}

func (x *BusinessSubCategory) GetMarketing() bool {
	if x != nil {
		return x.Marketing
	}
	return false
}

func (x *BusinessSubCategory) GetTravel() bool {
	if x != nil {
		return x.Travel
	}
	return false
}

func (x *BusinessSubCategory) GetInterior_Design() bool {
	if x != nil {
		return x.Interior_Design
	}
	return false
}

func (x *BusinessSubCategory) GetMusic() bool {
	if x != nil {
		return x.Music
	}
	return false
}

func (x *BusinessSubCategory) GetTechnology() bool {
	if x != nil {
		return x.Technology
	}
	return false
}

func (x *BusinessSubCategory) GetFood() bool {
	if x != nil {
		return x.Food
	}
	return false
}

func (x *BusinessSubCategory) GetRestaurants() bool {
	if x != nil {
		return x.Restaurants
	}
	return false
}

func (x *BusinessSubCategory) GetPolictics() bool {
	if x != nil {
		return x.Polictics
	}
	return false
}

func (x *BusinessSubCategory) GetHealth_And_Beauty() bool {
	if x != nil {
		return x.Health_And_Beauty
	}
	return false
}

func (x *BusinessSubCategory) GetDesign() bool {
	if x != nil {
		return x.Design
	}
	return false
}

func (x *BusinessSubCategory) GetNon_Profit() bool {
	if x != nil {
		return x.Non_Profit
	}
	return false
}

func (x *BusinessSubCategory) GetJewelry() bool {
	if x != nil {
		return x.Jewelry
	}
	return false
}

func (x *BusinessSubCategory) GetGaming() bool {
	if x != nil {
		return x.Gaming
	}
	return false
}

func (x *BusinessSubCategory) GetMagazine() bool {
	if x != nil {
		return x.Magazine
	}
	return false
}

func (x *BusinessSubCategory) GetPhotography() bool {
	if x != nil {
		return x.Photography
	}
	return false
}

func (x *BusinessSubCategory) GetFitenss() bool {
	if x != nil {
		return x.Fitenss
	}
	return false
}

func (x *BusinessSubCategory) GetConsulting() bool {
	if x != nil {
		return x.Consulting
	}
	return false
}

func (x *BusinessSubCategory) GetFashion() bool {
	if x != nil {
		return x.Fashion
	}
	return false
}

func (x *BusinessSubCategory) GetServices() bool {
	if x != nil {
		return x.Services
	}
	return false
}

func (x *BusinessSubCategory) GetArt() bool {
	if x != nil {
		return x.Art
	}
	return false
}

type MerchantType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SoleProprietor        bool `protobuf:"varint,1,opt,name=SoleProprietor,proto3" json:"SoleProprietor,omitempty"`
	SideProject           bool `protobuf:"varint,2,opt,name=SideProject,proto3" json:"SideProject,omitempty"`
	CasualUse             bool `protobuf:"varint,3,opt,name=CasualUse,proto3" json:"CasualUse,omitempty"`
	LLCCorporation        bool `protobuf:"varint,4,opt,name=LLCCorporation,proto3" json:"LLCCorporation,omitempty"`
	Partnership           bool `protobuf:"varint,5,opt,name=Partnership,proto3" json:"Partnership,omitempty"`
	Charity               bool `protobuf:"varint,6,opt,name=Charity,proto3" json:"Charity,omitempty"`
	ReligiousOrganization bool `protobuf:"varint,7,opt,name=ReligiousOrganization,proto3" json:"ReligiousOrganization,omitempty"`
	OnePersonBusiness     bool `protobuf:"varint,8,opt,name=OnePersonBusiness,proto3" json:"OnePersonBusiness,omitempty"`
}

func (x *MerchantType) Reset() {
	*x = MerchantType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_schema_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantType) ProtoMessage() {}

func (x *MerchantType) ProtoReflect() protoreflect.Message {
	mi := &file_model_schema_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantType.ProtoReflect.Descriptor instead.
func (*MerchantType) Descriptor() ([]byte, []int) {
	return file_model_schema_proto_rawDescGZIP(), []int{12}
}

func (x *MerchantType) GetSoleProprietor() bool {
	if x != nil {
		return x.SoleProprietor
	}
	return false
}

func (x *MerchantType) GetSideProject() bool {
	if x != nil {
		return x.SideProject
	}
	return false
}

func (x *MerchantType) GetCasualUse() bool {
	if x != nil {
		return x.CasualUse
	}
	return false
}

func (x *MerchantType) GetLLCCorporation() bool {
	if x != nil {
		return x.LLCCorporation
	}
	return false
}

func (x *MerchantType) GetPartnership() bool {
	if x != nil {
		return x.Partnership
	}
	return false
}

func (x *MerchantType) GetCharity() bool {
	if x != nil {
		return x.Charity
	}
	return false
}

func (x *MerchantType) GetReligiousOrganization() bool {
	if x != nil {
		return x.ReligiousOrganization
	}
	return false
}

func (x *MerchantType) GetOnePersonBusiness() bool {
	if x != nil {
		return x.OnePersonBusiness
	}
	return false
}

type PhoneNumber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number string     `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	Type   *PhoneType `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *PhoneNumber) Reset() {
	*x = PhoneNumber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_schema_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneNumber) ProtoMessage() {}

func (x *PhoneNumber) ProtoReflect() protoreflect.Message {
	mi := &file_model_schema_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneNumber.ProtoReflect.Descriptor instead.
func (*PhoneNumber) Descriptor() ([]byte, []int) {
	return file_model_schema_proto_rawDescGZIP(), []int{13}
}

func (x *PhoneNumber) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *PhoneNumber) GetType() *PhoneType {
	if x != nil {
		return x.Type
	}
	return nil
}

type PhoneType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Home   bool `protobuf:"varint,1,opt,name=home,proto3" json:"home,omitempty"`
	Work   bool `protobuf:"varint,2,opt,name=work,proto3" json:"work,omitempty"`
	Mobile bool `protobuf:"varint,3,opt,name=mobile,proto3" json:"mobile,omitempty"`
}

func (x *PhoneType) Reset() {
	*x = PhoneType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_schema_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneType) ProtoMessage() {}

func (x *PhoneType) ProtoReflect() protoreflect.Message {
	mi := &file_model_schema_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneType.ProtoReflect.Descriptor instead.
func (*PhoneType) Descriptor() ([]byte, []int) {
	return file_model_schema_proto_rawDescGZIP(), []int{14}
}

func (x *PhoneType) GetHome() bool {
	if x != nil {
		return x.Home
	}
	return false
}

func (x *PhoneType) GetWork() bool {
	if x != nil {
		return x.Work
	}
	return false
}

func (x *PhoneType) GetMobile() bool {
	if x != nil {
		return x.Mobile
	}
	return false
}

var File_model_schema_proto protoreflect.FileDescriptor

var file_model_schema_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x6f, 0x70, 0x65, 0x6e, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x67, 0x6f, 0x72, 0x6d, 0x2f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xad, 0x06, 0x0a, 0x0f, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x12, 0xba, 0xb9, 0x19, 0x0e, 0x0a,
	0x0c, 0x12, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x28, 0x01, 0x48, 0x01, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x0b, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0b,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x42, 0x08,
	0xba, 0xb9, 0x19, 0x04, 0x1a, 0x02, 0x38, 0x01, 0x52, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x35, 0x0a,
	0x0e, 0x74, 0x79, 0x70, 0x65, 0x4f, 0x66, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x74, 0x79, 0x70, 0x65, 0x4f, 0x66, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x47, 0x6f, 0x61, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x47, 0x6f, 0x61, 0x6c, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x12, 0x31, 0x0a, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x5e, 0x0a, 0x1b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x42, 0x79, 0x42, 0x6c, 0x61, 0x63, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x42, 0x79, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x1b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x42, 0x79, 0x42, 0x6c, 0x61, 0x63,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x0e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3d, 0x0a, 0x10, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x42, 0x08, 0xba, 0xb9, 0x19,
	0x04, 0x1a, 0x02, 0x38, 0x01, 0x52, 0x10, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x64, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6e,
	0x49, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x49,
	0x64, 0x3a, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x08, 0x01, 0x22, 0xd2, 0x02, 0x0a, 0x06, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x73, 0x12, 0x22, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x42, 0x12, 0xba, 0xb9, 0x19, 0x0e, 0x0a, 0x0c, 0x12, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x28, 0x01, 0x48, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x65, 0x63, 0x68,
	0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x54, 0x65,
	0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x12, 0x12, 0x0a, 0x04, 0x46, 0x6f, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x46, 0x6f, 0x6f, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x4d,
	0x75, 0x73, 0x69, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x43, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x12, 0x28, 0x0a, 0x0f, 0x46, 0x61, 0x73, 0x68, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x64,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x46, 0x61, 0x73,
	0x68, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x64, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x44, 0x65,
	0x73, 0x69, 0x67, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x72, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x03, 0x41, 0x72, 0x74, 0x3a, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x08, 0x01, 0x22, 0xc1,
	0x01, 0x0a, 0x05, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x22, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x12, 0xba, 0xb9, 0x19, 0x0e, 0x0a, 0x0c, 0x12, 0x06, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x28, 0x01, 0x48, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77,
	0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x67,
	0x72, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x67, 0x72, 0x61, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x49, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x49, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x3a, 0x06, 0xba, 0xb9, 0x19, 0x02,
	0x08, 0x01, 0x22, 0xb9, 0x01, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x41, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x5a, 0x69, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x5a, 0x69, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x69, 0x74, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x2a, 0x0a, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x42, 0x69,
	0x72, 0x74, 0x68, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x74, 0x65, 0x22, 0x49,
	0x0a, 0x0b, 0x44, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x12, 0x14, 0x0a,
	0x05, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4d, 0x6f,
	0x6e, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x44, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x44, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x59, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x59, 0x65, 0x61, 0x72, 0x22, 0xa3, 0x02, 0x0a, 0x1b, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x42, 0x79, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x74, 0x65,
	0x6d, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x49, 0x74, 0x65, 0x6d, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x47,
	0x69, 0x66, 0x74, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x47, 0x69, 0x66, 0x74, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x12, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x4c, 0x6f, 0x79, 0x61, 0x6c,
	0x74, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12,
	0x30, 0x0a, 0x13, 0x46, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x59, 0x6f, 0x75, 0x72, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x46, 0x75,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x59, 0x6f, 0x75, 0x72, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x22,
	0x7b, 0x0a, 0x18, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x12, 0x37, 0x0a, 0x0e, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x64, 0x69, 0x75, 0x6d, 0x52, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x22, 0x65, 0x0a, 0x0d,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x12, 0x20, 0x0a,
	0x0b, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x43, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x72, 0x22, 0x94, 0x01, 0x0a, 0x0e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x42, 0x72, 0x69, 0x63, 0x6b, 0x41,
	0x6e, 0x64, 0x4d, 0x6f, 0x72, 0x74, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e,
	0x42, 0x72, 0x69, 0x63, 0x6b, 0x41, 0x6e, 0x64, 0x4d, 0x6f, 0x72, 0x74, 0x61, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x4f, 0x6e, 0x54, 0x68, 0x65, 0x47, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x4f, 0x6e, 0x54, 0x68, 0x65, 0x47, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x54, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x49, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x54, 0x68, 0x72, 0x6f, 0x75,
	0x67, 0x68, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x22, 0x75, 0x0a, 0x0c, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x36, 0x0a, 0x0b, 0x73, 0x75, 0x62,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x75, 0x62, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x22, 0xcc, 0x03, 0x0a, 0x10, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x65, 0x63, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x54, 0x65, 0x63, 0x68, 0x12, 0x42, 0x0a, 0x1c, 0x43, 0x68,
	0x61, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x1c, 0x43, 0x68, 0x61, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x45, 0x64, 0x75, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x22,
	0x0a, 0x0c, 0x46, 0x6f, 0x6f, 0x64, 0x41, 0x6e, 0x64, 0x44, 0x72, 0x69, 0x6e, 0x6b, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x46, 0x6f, 0x6f, 0x64, 0x41, 0x6e, 0x64, 0x44, 0x72, 0x69,
	0x6e, 0x6b, 0x12, 0x32, 0x0a, 0x14, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x61, 0x72, 0x65,
	0x41, 0x6e, 0x64, 0x46, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x14, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x61, 0x72, 0x65, 0x41, 0x6e, 0x64, 0x46,
	0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x48, 0x6f, 0x6d, 0x65, 0x41, 0x6e,
	0x64, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x48,
	0x6f, 0x6d, 0x65, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x12, 0x38, 0x0a, 0x17,
	0x4c, 0x65, 0x69, 0x73, 0x75, 0x72, 0x65, 0x41, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x74,
	0x61, 0x69, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x4c,
	0x65, 0x69, 0x73, 0x75, 0x72, 0x65, 0x41, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x74, 0x61,
	0x69, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x66, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x50, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x52, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x15, 0x42, 0x65,
	0x61, 0x75, 0x74, 0x79, 0x41, 0x6e, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x43,
	0x61, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x42, 0x65, 0x61, 0x75, 0x74,
	0x79, 0x41, 0x6e, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x65,
	0x22, 0xd3, 0x04, 0x0a, 0x13, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x75, 0x62,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x12, 0x27,
	0x0a, 0x0f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x5f, 0x44, 0x65, 0x73, 0x69, 0x67,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x69, 0x6f,
	0x72, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x75, 0x73, 0x69, 0x63,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x12, 0x1e, 0x0a,
	0x0a, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x46, 0x6f, 0x6f, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x46, 0x6f, 0x6f,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61,
	0x6e, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x74, 0x69, 0x63, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x74, 0x69, 0x63,
	0x73, 0x12, 0x2a, 0x0a, 0x11, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x41, 0x6e, 0x64, 0x5f,
	0x42, 0x65, 0x61, 0x75, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x41, 0x6e, 0x64, 0x42, 0x65, 0x61, 0x75, 0x74, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x44,
	0x65, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x4e, 0x6f, 0x6e, 0x5f, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x4e, 0x6f, 0x6e, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4a, 0x65, 0x77, 0x65, 0x6c, 0x72, 0x79, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x4a, 0x65, 0x77, 0x65, 0x6c, 0x72, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x47, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x47, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x61, 0x67, 0x61, 0x7a, 0x69,
	0x6e, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x4d, 0x61, 0x67, 0x61, 0x7a, 0x69,
	0x6e, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x46, 0x69, 0x74, 0x65, 0x6e, 0x73, 0x73, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x46, 0x69, 0x74, 0x65, 0x6e, 0x73, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x18,
	0x0a, 0x07, 0x46, 0x61, 0x73, 0x68, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x46, 0x61, 0x73, 0x68, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x72, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x03, 0x41, 0x72, 0x74, 0x22, 0xbe, 0x02, 0x0a, 0x0c, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x6f, 0x6c, 0x65, 0x50,
	0x72, 0x6f, 0x70, 0x72, 0x69, 0x65, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x53, 0x6f, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x72, 0x69, 0x65, 0x74, 0x6f, 0x72, 0x12,
	0x20, 0x0a, 0x0b, 0x53, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x53, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x73, 0x75, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x43, 0x61, 0x73, 0x75, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x4c, 0x4c, 0x43, 0x43, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x4c, 0x4c, 0x43, 0x43, 0x6f, 0x72, 0x70,
	0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x50, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x68, 0x61,
	0x72, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x43, 0x68, 0x61, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x34, 0x0a, 0x15, 0x52, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x6f, 0x75, 0x73,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x15, 0x52, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x6f, 0x75, 0x73, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x4f, 0x6e, 0x65,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x4f, 0x6e, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x22, 0x45, 0x0a, 0x0b, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x4b,
	0x0a, 0x09, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x6f, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x68, 0x6f, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x77,
	0x6f, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42, 0x07, 0x5a, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_model_schema_proto_rawDescOnce sync.Once
	file_model_schema_proto_rawDescData = file_model_schema_proto_rawDesc
)

func file_model_schema_proto_rawDescGZIP() []byte {
	file_model_schema_proto_rawDescOnce.Do(func() {
		file_model_schema_proto_rawDescData = protoimpl.X.CompressGZIP(file_model_schema_proto_rawDescData)
	})
	return file_model_schema_proto_rawDescData
}

var file_model_schema_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_model_schema_proto_goTypes = []interface{}{
	(*BusinessAccount)(nil),             // 0: BusinessAccount
	(*Topics)(nil),                      // 1: Topics
	(*Media)(nil),                       // 2: Media
	(*Address)(nil),                     // 3: Address
	(*DateOfBirth)(nil),                 // 4: DateOfBirth
	(*ServicesManagedByBlackspace)(nil), // 5: ServicesManagedByBlackspace
	(*PaymentProcessingMethods)(nil),    // 6: PaymentProcessingMethods
	(*PaymentMedium)(nil),               // 7: PaymentMedium
	(*PaymentOptions)(nil),              // 8: PaymentOptions
	(*BusinessType)(nil),                // 9: BusinessType
	(*BusinessCategory)(nil),            // 10: BusinessCategory
	(*BusinessSubCategory)(nil),         // 11: BusinessSubCategory
	(*MerchantType)(nil),                // 12: MerchantType
	(*PhoneNumber)(nil),                 // 13: PhoneNumber
	(*PhoneType)(nil),                   // 14: PhoneType
}
var file_model_schema_proto_depIdxs = []int32{
	13, // 0: BusinessAccount.phoneNumber:type_name -> PhoneNumber
	2,  // 1: BusinessAccount.media:type_name -> Media
	9,  // 2: BusinessAccount.typeOfBusiness:type_name -> BusinessType
	12, // 3: BusinessAccount.merchantType:type_name -> MerchantType
	6,  // 4: BusinessAccount.paymentDetails:type_name -> PaymentProcessingMethods
	5,  // 5: BusinessAccount.servicesManagedByBlackspace:type_name -> ServicesManagedByBlackspace
	3,  // 6: BusinessAccount.founderAddress:type_name -> Address
	1,  // 7: BusinessAccount.subscribedTopics:type_name -> Topics
	4,  // 8: Address.birthdate:type_name -> DateOfBirth
	8,  // 9: PaymentProcessingMethods.paymentOptions:type_name -> PaymentOptions
	7,  // 10: PaymentProcessingMethods.medium:type_name -> PaymentMedium
	10, // 11: BusinessType.category:type_name -> BusinessCategory
	11, // 12: BusinessType.subCategory:type_name -> BusinessSubCategory
	14, // 13: PhoneNumber.type:type_name -> PhoneType
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_model_schema_proto_init() }
func file_model_schema_proto_init() {
	if File_model_schema_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_model_schema_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BusinessAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_schema_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Topics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_schema_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Media); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_schema_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_schema_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DateOfBirth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_schema_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServicesManagedByBlackspace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_schema_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentProcessingMethods); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_schema_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentMedium); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_schema_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_schema_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BusinessType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_schema_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BusinessCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_schema_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BusinessSubCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_schema_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_schema_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneNumber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_schema_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_model_schema_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_model_schema_proto_goTypes,
		DependencyIndexes: file_model_schema_proto_depIdxs,
		MessageInfos:      file_model_schema_proto_msgTypes,
	}.Build()
	File_model_schema_proto = out.File
	file_model_schema_proto_rawDesc = nil
	file_model_schema_proto_goTypes = nil
	file_model_schema_proto_depIdxs = nil
}
