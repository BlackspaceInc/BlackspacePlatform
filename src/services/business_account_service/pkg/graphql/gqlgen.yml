# Or globs from a root directory
schema:
  - "schema/*.graphql"

# Let gqlgen know where to put the generated server
exec:
  filename: generated/generated.go
  package: generated

# Let gqlgen know where to put the generated proto (if any)
# Set to null to disable
model:
  filename: generated/proto/models_gen.go
  package: proto

# Optional, turns on resolver stub generation
resolver:
  dir: .
  filename: resolver.go # where to write them
  layout: follow-schema
  type: Resolver  # what's the resolver root implementation type called?

# Optional, turns on binding to field names by tag provided
struct_tag: json

# Optional, set to true if you prefer []Thing over []*Thing
omit_slice_element_pointers: false

# Optional, set to speed up generation time by not performing a final validation pass
skip_validation: true

# Instead of listing out every model like below, you can automatically bind to any matching types
# within the given path by using `model: User` or `model: proto.User`. EXPERIMENTAL in v0.9.1
autobind:
  - github.com/BlackspaceInc/BlackspacePlatform/src/services/business_account_service/pkg/grpc/proto

