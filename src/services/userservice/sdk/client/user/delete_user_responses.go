// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteUserReader is a Reader for the DeleteUser structure.
type DeleteUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteUserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteUserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewDeleteUserNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteUserOK creates a DeleteUserOK with default headers values
func NewDeleteUserOK() *DeleteUserOK {
	return &DeleteUserOK{}
}

/*DeleteUserOK handles this case with default header values.

Common operation response
*/
type DeleteUserOK struct {
	Payload *DeleteUserOKBody
}

func (o *DeleteUserOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/user/{id}][%d] deleteUserOK  %+v", 200, o.Payload)
}

func (o *DeleteUserOK) GetPayload() *DeleteUserOKBody {
	return o.Payload
}

func (o *DeleteUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteUserOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserBadRequest creates a DeleteUserBadRequest with default headers values
func NewDeleteUserBadRequest() *DeleteUserBadRequest {
	return &DeleteUserBadRequest{}
}

/*DeleteUserBadRequest handles this case with default header values.

Bad Request
*/
type DeleteUserBadRequest struct {
	Payload *DeleteUserBadRequestBody
}

func (o *DeleteUserBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /v1/user/{id}][%d] deleteUserBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteUserBadRequest) GetPayload() *DeleteUserBadRequestBody {
	return o.Payload
}

func (o *DeleteUserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteUserBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserUnauthorized creates a DeleteUserUnauthorized with default headers values
func NewDeleteUserUnauthorized() *DeleteUserUnauthorized {
	return &DeleteUserUnauthorized{}
}

/*DeleteUserUnauthorized handles this case with default header values.

UnAuthorized Request
*/
type DeleteUserUnauthorized struct {
	Payload *DeleteUserUnauthorizedBody
}

func (o *DeleteUserUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /v1/user/{id}][%d] deleteUserUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteUserUnauthorized) GetPayload() *DeleteUserUnauthorizedBody {
	return o.Payload
}

func (o *DeleteUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteUserUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserForbidden creates a DeleteUserForbidden with default headers values
func NewDeleteUserForbidden() *DeleteUserForbidden {
	return &DeleteUserForbidden{}
}

/*DeleteUserForbidden handles this case with default header values.

Forbidden Request
*/
type DeleteUserForbidden struct {
	Payload *DeleteUserForbiddenBody
}

func (o *DeleteUserForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v1/user/{id}][%d] deleteUserForbidden  %+v", 403, o.Payload)
}

func (o *DeleteUserForbidden) GetPayload() *DeleteUserForbiddenBody {
	return o.Payload
}

func (o *DeleteUserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteUserForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserNotFound creates a DeleteUserNotFound with default headers values
func NewDeleteUserNotFound() *DeleteUserNotFound {
	return &DeleteUserNotFound{}
}

/*DeleteUserNotFound handles this case with default header values.

Request Not Found
*/
type DeleteUserNotFound struct {
	Payload *DeleteUserNotFoundBody
}

func (o *DeleteUserNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/user/{id}][%d] deleteUserNotFound  %+v", 404, o.Payload)
}

func (o *DeleteUserNotFound) GetPayload() *DeleteUserNotFoundBody {
	return o.Payload
}

func (o *DeleteUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteUserNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserNotAcceptable creates a DeleteUserNotAcceptable with default headers values
func NewDeleteUserNotAcceptable() *DeleteUserNotAcceptable {
	return &DeleteUserNotAcceptable{}
}

/*DeleteUserNotAcceptable handles this case with default header values.

Error occured during request lifecycle
*/
type DeleteUserNotAcceptable struct {
	Payload *DeleteUserNotAcceptableBody
}

func (o *DeleteUserNotAcceptable) Error() string {
	return fmt.Sprintf("[DELETE /v1/user/{id}][%d] deleteUserNotAcceptable  %+v", 406, o.Payload)
}

func (o *DeleteUserNotAcceptable) GetPayload() *DeleteUserNotAcceptableBody {
	return o.Payload
}

func (o *DeleteUserNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteUserNotAcceptableBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserInternalServerError creates a DeleteUserInternalServerError with default headers values
func NewDeleteUserInternalServerError() *DeleteUserInternalServerError {
	return &DeleteUserInternalServerError{}
}

/*DeleteUserInternalServerError handles this case with default header values.

Internal Server Error
*/
type DeleteUserInternalServerError struct {
	Payload *DeleteUserInternalServerErrorBody
}

func (o *DeleteUserInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /v1/user/{id}][%d] deleteUserInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteUserInternalServerError) GetPayload() *DeleteUserInternalServerErrorBody {
	return o.Payload
}

func (o *DeleteUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteUserInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*DeleteUserBadRequestBody delete user bad request body
swagger:model DeleteUserBadRequestBody
*/
type DeleteUserBadRequestBody struct {

	// description of the error
	// Required: true
	Error *string `json:"error"`
}

// Validate validates this delete user bad request body
func (o *DeleteUserBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteUserBadRequestBody) validateError(formats strfmt.Registry) error {

	if err := validate.Required("deleteUserBadRequest"+"."+"error", "body", o.Error); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteUserBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteUserBadRequestBody) UnmarshalBinary(b []byte) error {
	var res DeleteUserBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DeleteUserForbiddenBody delete user forbidden body
swagger:model DeleteUserForbiddenBody
*/
type DeleteUserForbiddenBody struct {

	// description of the error
	// Required: true
	Error *string `json:"error"`
}

// Validate validates this delete user forbidden body
func (o *DeleteUserForbiddenBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteUserForbiddenBody) validateError(formats strfmt.Registry) error {

	if err := validate.Required("deleteUserForbidden"+"."+"error", "body", o.Error); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteUserForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteUserForbiddenBody) UnmarshalBinary(b []byte) error {
	var res DeleteUserForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DeleteUserInternalServerErrorBody delete user internal server error body
swagger:model DeleteUserInternalServerErrorBody
*/
type DeleteUserInternalServerErrorBody struct {

	// description of the error
	// Required: true
	Error *string `json:"error"`
}

// Validate validates this delete user internal server error body
func (o *DeleteUserInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteUserInternalServerErrorBody) validateError(formats strfmt.Registry) error {

	if err := validate.Required("deleteUserInternalServerError"+"."+"error", "body", o.Error); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteUserInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteUserInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res DeleteUserInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DeleteUserNotAcceptableBody delete user not acceptable body
swagger:model DeleteUserNotAcceptableBody
*/
type DeleteUserNotAcceptableBody struct {

	// description of the error
	// Required: true
	Error *string `json:"error"`
}

// Validate validates this delete user not acceptable body
func (o *DeleteUserNotAcceptableBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteUserNotAcceptableBody) validateError(formats strfmt.Registry) error {

	if err := validate.Required("deleteUserNotAcceptable"+"."+"error", "body", o.Error); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteUserNotAcceptableBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteUserNotAcceptableBody) UnmarshalBinary(b []byte) error {
	var res DeleteUserNotAcceptableBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DeleteUserNotFoundBody delete user not found body
swagger:model DeleteUserNotFoundBody
*/
type DeleteUserNotFoundBody struct {

	// description of the error
	// Required: true
	Error *string `json:"error"`
}

// Validate validates this delete user not found body
func (o *DeleteUserNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteUserNotFoundBody) validateError(formats strfmt.Registry) error {

	if err := validate.Required("deleteUserNotFound"+"."+"error", "body", o.Error); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteUserNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteUserNotFoundBody) UnmarshalBinary(b []byte) error {
	var res DeleteUserNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DeleteUserOKBody delete user o k body
swagger:model DeleteUserOKBody
*/
type DeleteUserOKBody struct {

	// error
	// Required: true
	Error *string `json:"error"`
}

// Validate validates this delete user o k body
func (o *DeleteUserOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteUserOKBody) validateError(formats strfmt.Registry) error {

	if err := validate.Required("deleteUserOK"+"."+"error", "body", o.Error); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteUserOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteUserOKBody) UnmarshalBinary(b []byte) error {
	var res DeleteUserOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DeleteUserUnauthorizedBody delete user unauthorized body
swagger:model DeleteUserUnauthorizedBody
*/
type DeleteUserUnauthorizedBody struct {

	// description of the error
	// Required: true
	Error *string `json:"error"`
}

// Validate validates this delete user unauthorized body
func (o *DeleteUserUnauthorizedBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteUserUnauthorizedBody) validateError(formats strfmt.Registry) error {

	if err := validate.Required("deleteUserUnauthorized"+"."+"error", "body", o.Error); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteUserUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteUserUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res DeleteUserUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
