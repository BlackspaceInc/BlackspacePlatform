basePath: /v1
consumes:
- application/json
definitions:
  DateTime:
    description: |-
      DateTime DateTime DateTime is a time but it serializes to ISO8601 format with millis
      It knows how to read 3 different variations of a RFC3339 date time.
      Most APIs we encounter want either millisecond or second precision times.
      This just tries to make it worry-free.
    format: date-time
    type: string
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/models
  DeleteUserBadRequestBody:
    description: DeleteUserBadRequestBody delete user bad request body
    properties:
      error:
        description: description of the error
        type: string
        x-go-name: Error
    required:
    - error
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/client/user
  DeleteUserForbiddenBody:
    description: DeleteUserForbiddenBody DeleteUserForbiddenBody DeleteUserForbiddenBody
      DeleteUserForbiddenBody DeleteUserForbiddenBody delete user forbidden body
    properties:
      error:
        description: description of the error
        type: string
        x-go-name: Error
    required:
    - error
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/models
  DeleteUserInternalServerErrorBody:
    description: DeleteUserInternalServerErrorBody DeleteUserInternalServerErrorBody
      DeleteUserInternalServerErrorBody DeleteUserInternalServerErrorBody DeleteUserInternalServerErrorBody
      delete user internal server error body
    properties:
      error:
        description: description of the error
        type: string
        x-go-name: Error
    required:
    - error
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/models
  DeleteUserNotAcceptableBody:
    description: DeleteUserNotAcceptableBody DeleteUserNotAcceptableBody DeleteUserNotAcceptableBody
      delete user not acceptable body
    properties:
      error:
        description: description of the error
        type: string
        x-go-name: Error
    required:
    - error
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/models
  DeleteUserNotFoundBody:
    description: DeleteUserNotFoundBody delete user not found body
    properties:
      error:
        description: description of the error
        type: string
        x-go-name: Error
    required:
    - error
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/client/user
  DeleteUserOKBody:
    description: DeleteUserOKBody DeleteUserOKBody delete user o k body
    properties:
      error:
        description: error
        type: string
        x-go-name: Error
    required:
    - error
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/models
  DeleteUserUnauthorizedBody:
    description: DeleteUserUnauthorizedBody DeleteUserUnauthorizedBody DeleteUserUnauthorizedBody
      DeleteUserUnauthorizedBody delete user unauthorized body
    properties:
      error:
        description: description of the error
        type: string
        x-go-name: Error
    required:
    - error
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/models
  Gender:
    description: Gender Gender Gender Gender Gender Gender Gender Gender Gender gender
    properties:
      female:
        description: female
        type: boolean
        x-go-name: Female
      genderNonBinary:
        description: gender non binary
        type: boolean
        x-go-name: GenderNonBinary
      male:
        description: male
        type: boolean
        x-go-name: Male
      transgender:
        description: transgender
        type: boolean
        x-go-name: Transgender
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/models
  GetUserRequestBadRequestBody:
    description: GetUserRequestBadRequestBody GetUserRequestBadRequestBody get user
      request bad request body
    properties:
      error:
        description: description of the error
        type: string
        x-go-name: Error
    required:
    - error
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/models
  GetUserRequestBody:
    description: GetUserRequestBody get user request body
    properties:
      result:
        description: |-
          id of the user account to get
          in: query
        format: uint32
        type: integer
        x-go-name: ID
    required:
    - result
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/client/user
  GetUserRequestForbiddenBody:
    description: GetUserRequestForbiddenBody GetUserRequestForbiddenBody get user
      request forbidden body
    properties:
      error:
        description: description of the error
        type: string
        x-go-name: Error
    required:
    - error
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/models
  GetUserRequestInternalServerErrorBody:
    description: GetUserRequestInternalServerErrorBody get user request internal server
      error body
    properties:
      error:
        description: description of the error
        type: string
        x-go-name: Error
    required:
    - error
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/client/user
  GetUserRequestNotAcceptableBody:
    description: GetUserRequestNotAcceptableBody GetUserRequestNotAcceptableBody get
      user request not acceptable body
    properties:
      error:
        description: description of the error
        type: string
        x-go-name: Error
    required:
    - error
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/models
  GetUserRequestNotFoundBody:
    description: GetUserRequestNotFoundBody GetUserRequestNotFoundBody GetUserRequestNotFoundBody
      GetUserRequestNotFoundBody get user request not found body
    properties:
      error:
        description: description of the error
        type: string
        x-go-name: Error
    required:
    - error
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/models
  GetUserRequestOKBody:
    description: GetUserRequestOKBody get user request o k body
    properties:
      error:
        description: error
        type: string
        x-go-name: Error
      user:
        $ref: '#/definitions/UserORM'
    required:
    - error
    - user
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/client/user
  GetUserRequestUnauthorizedBody:
    description: GetUserRequestUnauthorizedBody get user request unauthorized body
    properties:
      error:
        description: description of the error
        type: string
        x-go-name: Error
    required:
    - error
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/client/user
  LoginUserRequestBadRequestBody:
    description: LoginUserRequestBadRequestBody login user request bad request body
    properties:
      error:
        description: description of the error
        type: string
        x-go-name: Error
    required:
    - error
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/client/user
  LoginUserRequestBody:
    description: LoginUserRequestBody LoginUserRequestBody login user request body
    properties:
      password:
        description: password
        type: string
        x-go-name: Password
      username:
        description: user name
        type: string
        x-go-name: Username
    required:
    - password
    - username
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/models
  LoginUserRequestForbiddenBody:
    description: LoginUserRequestForbiddenBody login user request forbidden body
    properties:
      error:
        description: description of the error
        type: string
        x-go-name: Error
    required:
    - error
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/client/user
  LoginUserRequestInternalServerErrorBody:
    description: LoginUserRequestInternalServerErrorBody LoginUserRequestInternalServerErrorBody
      login user request internal server error body
    properties:
      error:
        description: description of the error
        type: string
        x-go-name: Error
    required:
    - error
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/models
  LoginUserRequestNotAcceptableBody:
    description: LoginUserRequestNotAcceptableBody login user request not acceptable
      body
    properties:
      error:
        description: description of the error
        type: string
        x-go-name: Error
    required:
    - error
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/client/user
  LoginUserRequestNotFoundBody:
    description: LoginUserRequestNotFoundBody LoginUserRequestNotFoundBody login user
      request not found body
    properties:
      error:
        description: description of the error
        type: string
        x-go-name: Error
    required:
    - error
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/models
  LoginUserRequestOKBody:
    description: LoginUserRequestOKBody LoginUserRequestOKBody LoginUserRequestOKBody
      LoginUserRequestOKBody login user request o k body
    properties:
      error:
        description: error
        type: string
        x-go-name: Error
      token:
        description: Jwt Token
        type: string
        x-go-name: JwtToken
    required:
    - error
    - token
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/models
  LoginUserRequestUnauthorizedBody:
    description: LoginUserRequestUnauthorizedBody LoginUserRequestUnauthorizedBody
      LoginUserRequestUnauthorizedBody LoginUserRequestUnauthorizedBody LoginUserRequestUnauthorizedBody
      login user request unauthorized body
    properties:
      error:
        description: description of the error
        type: string
        x-go-name: Error
    required:
    - error
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/models
  SignUpUserReqBadRequestBody:
    description: SignUpUserReqBadRequestBody SignUpUserReqBadRequestBody sign up user
      req bad request body
    properties:
      error:
        description: description of the error
        type: string
        x-go-name: Error
    required:
    - error
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/models
  SignUpUserReqBody:
    description: SignUpUserReqBody sign up user req body
    properties:
      email:
        description: user email address to create
        type: string
        x-go-name: Email
      firstname:
        description: user first name
        type: string
        x-go-name: FirstName
      lastname:
        description: user last name
        type: string
        x-go-name: LastName
      password:
        description: user password to create
        type: string
        x-go-name: Password
      username:
        description: user username to create
        type: string
        x-go-name: Username
    required:
    - email
    - firstname
    - lastname
    - password
    - username
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/client/user
  SignUpUserReqForbiddenBody:
    description: SignUpUserReqForbiddenBody SignUpUserReqForbiddenBody SignUpUserReqForbiddenBody
      SignUpUserReqForbiddenBody SignUpUserReqForbiddenBody SignUpUserReqForbiddenBody
      SignUpUserReqForbiddenBody sign up user req forbidden body
    properties:
      error:
        description: error
        type: string
        x-go-name: Error
    required:
    - error
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/models
  SignUpUserReqInternalServerErrorBody:
    description: SignUpUserReqInternalServerErrorBody sign up user req internal server
      error body
    properties:
      error:
        description: description of the error
        type: string
        x-go-name: Error
    required:
    - error
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/client/user
  SignUpUserReqNotAcceptableBody:
    description: SignUpUserReqNotAcceptableBody SignUpUserReqNotAcceptableBody SignUpUserReqNotAcceptableBody
      SignUpUserReqNotAcceptableBody sign up user req not acceptable body
    properties:
      error:
        description: description of the error
        type: string
        x-go-name: Error
    required:
    - error
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/models
  SignUpUserReqNotFoundBody:
    description: SignUpUserReqNotFoundBody sign up user req not found body
    properties:
      error:
        description: description of the error
        type: string
        x-go-name: Error
    required:
    - error
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/client/user
  SignUpUserReqOKBody:
    description: SignUpUserReqOKBody SignUpUserReqOKBody SignUpUserReqOKBody sign
      up user req o k body
    properties:
      error:
        description: error
        type: string
        x-go-name: Error
      id:
        description: user account id
        format: uint32
        type: integer
        x-go-name: ID
      jwt:
        description: JWT Token
        type: string
        x-go-name: JwtToken
    required:
    - error
    - id
    - jwt
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/models
  SignUpUserReqUnauthorizedBody:
    description: SignUpUserReqUnauthorizedBody SignUpUserReqUnauthorizedBody SignUpUserReqUnauthorizedBody
      SignUpUserReqUnauthorizedBody SignUpUserReqUnauthorizedBody sign up user req
      unauthorized body
    properties:
      error:
        description: description of the error
        type: string
        x-go-name: Error
    required:
    - error
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/models
  Timestamp:
    description: |-
      All minutes are 60 seconds long. Leap seconds are "smeared" so that no leap
      second table is needed for interpretation, using a [24-hour linear
      smear](https://developers.google.com/time/smear).

      The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By
      restricting to that range, we ensure that we can convert to and from [RFC
      3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.

      # Examples

      Example 1: Compute Timestamp from POSIX `time()`.

      Timestamp timestamp;
      timestamp.set_seconds(time(NULL));
      timestamp.set_nanos(0);

      Example 2: Compute Timestamp from POSIX `gettimeofday()`.

      struct timeval tv;
      gettimeofday(&tv, NULL);

      Timestamp timestamp;
      timestamp.set_seconds(tv.tv_sec);
      timestamp.set_nanos(tv.tv_usec * 1000);

      Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.

      FILETIME ft;
      GetSystemTimeAsFileTime(&ft);
      UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;

      A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z
      is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.
      Timestamp timestamp;
      timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));
      timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));

      Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.

      long millis = System.currentTimeMillis();

      Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)
      .setNanos((int) ((millis % 1000) * 1000000)).build();


      Example 5: Compute Timestamp from current time in Python.

      timestamp = Timestamp()
      timestamp.GetCurrentTime()

      # JSON Mapping

      In JSON format, the Timestamp type is encoded as a string in the
      [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the
      format is "{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z"
      where {year} is always expressed using four digits while {month}, {day},
      {hour}, {min}, and {sec} are zero-padded to two digits each. The fractional
      seconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),
      are optional. The "Z" suffix indicates the timezone ("UTC"); the timezone
      is required. A proto3 JSON serializer should always use UTC (as indicated by
      "Z") when printing the Timestamp type and a proto3 JSON parser should be
      able to accept both UTC and other timezones (as indicated by an offset).

      For example, "2017-01-15T01:30:15.01Z" encodes 15.01 seconds past
      01:30 UTC on January 15, 2017.

      In JavaScript, one can convert a Date object to this format using the
      standard
      [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)
      method. In Python, a standard `datetime.datetime` object can be converted
      to this format using
      [`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with
      the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use
      the Joda Time's [`ISODateTimeFormat.dateTime()`](
      http://www.joda.org/joda-time/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime%2D%2D
      ) to obtain a formatter capable of generating timestamps in this format.
    properties:
      nanos:
        description: |-
          Non-negative fractions of a second at nanosecond resolution. Negative
          second values with fractions must still have non-negative nanos values
          that count forward in time. Must be from 0 to 999,999,999
          inclusive.
        format: int32
        type: integer
        x-go-name: Nanos
      seconds:
        description: |-
          Represents seconds of UTC time since Unix epoch
          1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
          9999-12-31T23:59:59Z inclusive.
        format: int64
        type: integer
        x-go-name: Seconds
    title: |-
      Timestamp Timestamp Timestamp Timestamp Timestamp Timestamp Timestamp Timestamp Timestamp A Timestamp represents a point in time independent of any time zone or local
      calendar, encoded as a count of seconds and fractions of seconds at
      nanosecond resolution. The count is relative to an epoch at UTC midnight on
      January 1, 1970, in the proleptic Gregorian calendar which extends the
      Gregorian calendar backwards to year one.
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/models
  UpdateSwaggerUserBody:
    description: UpdateSwaggerUserBody UpdateSwaggerUserBody UpdateSwaggerUserBody
      update swagger user body
    properties:
      result:
        $ref: '#/definitions/User'
    required:
    - result
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/models
  UpdateSwaggerUserOKBody:
    description: UpdateSwaggerUserOKBody UpdateSwaggerUserOKBody update swagger user
      o k body
    properties:
      error:
        description: error
        type: string
        x-go-name: Error
    required:
    - error
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/models
  UpdateUserBadRequestBody:
    description: UpdateUserBadRequestBody update user bad request body
    properties:
      error:
        description: description of the error
        type: string
        x-go-name: Error
    required:
    - error
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/client/user
  UpdateUserBody:
    description: UpdateUserBody update user body
    properties:
      result:
        $ref: '#/definitions/User'
    required:
    - result
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/client/user
  UpdateUserForbiddenBody:
    description: UpdateUserForbiddenBody update user forbidden body
    properties:
      error:
        description: description of the error
        type: string
        x-go-name: Error
    required:
    - error
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/client/user
  UpdateUserInternalServerErrorBody:
    description: UpdateUserInternalServerErrorBody update user internal server error
      body
    properties:
      error:
        description: description of the error
        type: string
        x-go-name: Error
    required:
    - error
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/client/user
  UpdateUserNotAcceptableBody:
    description: UpdateUserNotAcceptableBody UpdateUserNotAcceptableBody UpdateUserNotAcceptableBody
      update user not acceptable body
    properties:
      error:
        description: description of the error
        type: string
        x-go-name: Error
    required:
    - error
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/models
  UpdateUserNotFoundBody:
    description: UpdateUserNotFoundBody UpdateUserNotFoundBody update user not found
      body
    properties:
      error:
        description: description of the error
        type: string
        x-go-name: Error
    required:
    - error
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/models
  UpdateUserOKBody:
    description: UpdateUserOKBody update user o k body
    properties:
      error:
        description: error
        type: string
        x-go-name: Error
    required:
    - error
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/client/user
  UpdateUserUnauthorizedBody:
    description: UpdateUserUnauthorizedBody update user unauthorized body
    properties:
      error:
        description: description of the error
        type: string
        x-go-name: Error
    required:
    - error
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/client/user
  User:
    description: User User User User User User User User User user
    properties:
      authnid:
        description: authnid
        format: uint32
        type: integer
        x-go-name: Authnid
      birthDate:
        description: birth date
        type: string
        x-go-name: BirthDate
      created_at:
        $ref: '#/definitions/Timestamp'
      deleted_at:
        $ref: '#/definitions/Timestamp'
      email:
        description: email
        type: string
        x-go-name: Email
      firstName:
        description: first name
        type: string
        x-go-name: FirstName
      gender:
        $ref: '#/definitions/Gender'
      id:
        description: Id
        format: uint32
        type: integer
        x-go-name: ID
      isActive:
        description: is active
        type: boolean
        x-go-name: IsActive
      isOnline:
        description: is online
        type: boolean
        x-go-name: IsOnline
      lastName:
        description: last name
        type: string
        x-go-name: LastName
      password:
        description: password
        type: string
        x-go-name: Password
      updated_at:
        $ref: '#/definitions/Timestamp'
      username:
        description: username
        type: string
        x-go-name: Username
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/models
  UserORM:
    description: UserORM UserORM UserORM UserORM UserORM UserORM UserORM UserORM UserORM
      user o r m
    properties:
      Authnid:
        description: authnid
        format: uint32
        type: integer
      BirthDate:
        description: birth date
        type: string
      CreatedAt:
        description: |-
          created at
          Format: date-time
          Format: date-time
          Format: date-time
          Format: date-time
          Format: date-time
          Format: date-time
          Format: date-time
          Format: date-time
          Format: date-time
        format: date-time
        type: string
      DeletedAt:
        description: |-
          deleted at
          Format: date-time
          Format: date-time
          Format: date-time
          Format: date-time
          Format: date-time
          Format: date-time
          Format: date-time
          Format: date-time
          Format: date-time
        format: date-time
        type: string
      Email:
        description: email
        type: string
      FirstName:
        description: first name
        type: string
      Id:
        description: Id
        format: uint32
        type: integer
        x-go-name: ID
      IsActive:
        description: is active
        type: boolean
      IsOnline:
        description: is online
        type: boolean
      LastName:
        description: last name
        type: string
      Password:
        description: password
        type: string
      UpdatedAt:
        description: |-
          updated at
          Format: date-time
          Format: date-time
          Format: date-time
          Format: date-time
          Format: date-time
          Format: date-time
          Format: date-time
          Format: date-time
          Format: date-time
        format: date-time
        type: string
      Username:
        description: username
        type: string
    type: object
    x-go-package: github.com/BlackspaceInc/Backend/user-management-service/sdk/models
host: localhost
info:
  contact:
    email: yoanyombapro@gmail.com.com
    name: Yoan Yomba
    url: http://BlackSpace.com
  description: This serves as the user's microservice api definition for the BlackSpace
    Platform
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
  termsOfService: there are no TOS at this moment, use at your own risk we take no
    responsibility
  title: Backend API.
  version: 1.0.0
paths:
  /v1/user/{id}:
    delete:
      consumes:
      - application/json
      - application/x-protobuf
      description: Deletes a user account present in the backend database
      operationId: deleteUser
      parameters:
      - description: id of the user account to delete
        format: uint32
        in: query
        name: result
        required: true
        type: integer
        x-go-name: Id
      - description: The id of the product for which the operation relates
        format: int64
        in: path
        name: id
        required: true
        type: integer
        x-go-name: ID
      produces:
      - application/json
      - application/x-protobuf
      responses:
        "200":
          $ref: '#/responses/operationResponse'
        "400":
          $ref: '#/responses/badRequestError'
        "401":
          $ref: '#/responses/unAuthorizedError'
        "403":
          $ref: '#/responses/forbiddenError'
        "404":
          $ref: '#/responses/notFoundError'
        "406":
          $ref: '#/responses/genericError'
        "500":
          $ref: '#/responses/internalServerError'
      schemes:
      - http
      - https
      - ws
      - wss
      security:
      - api_key: []
      - oauth:
        - read
        - write
      summary: Delete User Account
      tags:
      - User
    get:
      consumes:
      - application/json
      - application/x-protobuf
      description: Returns a user account by id
      operationId: getUserRequest
      parameters:
      - description: user account to create
        in: body
        name: Body
        schema:
          properties:
            result:
              description: |-
                id of the user account to get
                in: query
              format: uint32
              type: integer
              x-go-name: Id
          required:
          - result
          type: object
      - description: The id of the product for which the operation relates
        format: int64
        in: path
        name: id
        required: true
        type: integer
        x-go-name: ID
      produces:
      - application/json
      - application/x-protobuf
      responses:
        "200":
          $ref: '#/responses/getUserResponse'
        "400":
          $ref: '#/responses/badRequestError'
        "401":
          $ref: '#/responses/unAuthorizedError'
        "403":
          $ref: '#/responses/forbiddenError'
        "404":
          $ref: '#/responses/notFoundError'
        "406":
          $ref: '#/responses/genericError'
        "500":
          $ref: '#/responses/internalServerError'
      schemes:
      - http
      - https
      - ws
      - wss
      security:
      - api_key: []
      - oauth:
        - read
        - write
      summary: Get User Account By ID
      tags:
      - User
    put:
      consumes:
      - application/json
      - application/x-protobuf
      description: Updates a user account present in the backend database
      operationId: updateUser
      parameters:
      - description: user account to create
        in: body
        name: Body
        schema:
          properties:
            result:
              $ref: '#/definitions/User'
          required:
          - result
          type: object
      - description: user id of account to update
        format: uint32
        in: query
        name: UserAccountId
        type: integer
      - description: The id of the product for which the operation relates
        format: int64
        in: path
        name: id
        required: true
        type: integer
        x-go-name: ID
      produces:
      - application/json
      - application/x-protobuf
      responses:
        "200":
          $ref: '#/responses/operationResponse'
        "400":
          $ref: '#/responses/badRequestError'
        "401":
          $ref: '#/responses/unAuthorizedError'
        "403":
          $ref: '#/responses/forbiddenError'
        "404":
          $ref: '#/responses/notFoundError'
        "406":
          $ref: '#/responses/genericError'
        "500":
          $ref: '#/responses/internalServerError'
      schemes:
      - http
      - https
      - ws
      - wss
      security:
      - api_key: []
      - oauth:
        - read
        - write
      summary: Update User Account
      tags:
      - User
  /v1/user/login:
    post:
      consumes:
      - application/json
      - application/x-protobuf
      description: Logs in a user into the system
      operationId: loginUserRequest
      parameters:
      - in: body
        name: Body
        schema:
          properties:
            password:
              description: password
              example: test-password
              type: string
              x-go-name: Password
            username:
              description: user name
              example: test-username
              type: string
              x-go-name: Username
          required:
          - username
          - password
          type: object
      produces:
      - application/json
      - application/x-protobuf
      responses:
        "200":
          $ref: '#/responses/loginUserResponse'
        "400":
          $ref: '#/responses/badRequestError'
        "403":
          $ref: '#/responses/forbiddenError'
        "404":
          $ref: '#/responses/notFoundError'
        "406":
          $ref: '#/responses/genericError'
        "500":
          $ref: '#/responses/internalServerError'
      schemes:
      - http
      - https
      - ws
      - wss
      security:
      - api_key: []
      - oauth:
        - read
        - write
      summary: Log in user
      tags:
      - User
  /v1/user/signup:
    post:
      consumes:
      - application/json
      - application/x-protobuf
      description: creates a user account object in the backend database
      operationId: signUpUserReq
      parameters:
      - in: body
        name: Body
        schema:
          properties:
            email:
              description: user email address to create
              type: string
              x-go-name: Email
            firstname:
              description: user first name
              type: string
              x-go-name: FirstName
            lastname:
              description: user last name
              type: string
              x-go-name: LastName
            password:
              description: user password to create
              type: string
              x-go-name: Password
            username:
              description: user username to create
              type: string
              x-go-name: Username
          required:
          - email
          - firstname
          - lastname
          - username
          - password
          type: object
      produces:
      - application/json
      - application/x-protobuf
      responses:
        "200":
          $ref: '#/responses/signUpUserResp'
        "400":
          $ref: '#/responses/badRequestError'
        "403":
          $ref: '#/responses/forbiddenError'
        "404":
          $ref: '#/responses/notFoundError'
        "406":
          $ref: '#/responses/genericError'
        "500":
          $ref: '#/responses/internalServerError'
      schemes:
      - http
      - https
      - ws
      - wss
      security:
      - api_key: []
      - oauth:
        - read
        - write
      summary: Sign Up User
      tags:
      - User
produces:
- application/json
responses:
  badRequestError:
    description: Bad Request
    schema:
      properties:
        error:
          description: description of the error
          type: string
          x-go-name: Error
      required:
      - error
      type: object
  forbiddenError:
    description: Forbidden Request
    schema:
      properties:
        error:
          description: description of the error
          type: string
          x-go-name: Error
      required:
      - error
      type: object
  genericError:
    description: Error occured during request lifecycle
    schema:
      properties:
        error:
          description: description of the error
          type: string
          x-go-name: Error
      required:
      - error
      type: object
  getUserResponse:
    description: Common operation response
    schema:
      properties:
        error:
          description: error
          example: error occured while processing request
          type: string
          x-go-name: Error
        user:
          $ref: '#/definitions/UserORM'
      required:
      - error
      - user
      type: object
  internalServerError:
    description: Internal Server Error
    schema:
      properties:
        error:
          description: description of the error
          type: string
          x-go-name: Error
      required:
      - error
      type: object
  loginUserResponse:
    description: Log in user response
    schema:
      properties:
        error:
          description: error
          example: unable to get token
          type: string
          x-go-name: Error
        refresh_token:
          description: Refresh Token
          example: kBxbjzKVDjvasgvds.askdhjaskjdgsagjcdgc.asjdjkasfgdas
          type: string
          x-go-name: RefreshToken
        token:
          description: Jwt Token
          example: kBxbjzKVDjvasgvds.askdhjaskjdgsagjcdgc.asjdjkasfgdas
          type: string
          x-go-name: JwtToken
      required:
      - token
      - refresh_token
      - error
      type: object
  notFoundError:
    description: Request Not Found
    schema:
      properties:
        error:
          description: description of the error
          type: string
          x-go-name: Error
      required:
      - error
      type: object
  operationResponse:
    description: OperationResponseSwagger Defines a common operation response
    schema:
      properties:
        error:
          description: error
          example: error occured while processing request
          type: string
          x-go-name: Error
      required:
      - error
      type: object
  signUpUserResp:
    description: User Successfully signed up
    schema:
      properties:
        error:
          description: error
          example: user already exists
          type: string
          x-go-name: Error
        id:
          description: user account id
          example: 20
          format: uint32
          type: integer
          x-go-name: Id
      required:
      - id
      - error
      type: object
  unAuthorizedError:
    description: UnAuthorized Request
    schema:
      properties:
        error:
          description: description of the error
          type: string
          x-go-name: Error
      required:
      - error
      type: object
schemes:
- http
- https
security:
- api_key: []
swagger: "2.0"
x-meta-array:
- value1
- value2
x-meta-array-obj:
- name: obj
  value: field
x-meta-value: value
