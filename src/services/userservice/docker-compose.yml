version: '3'

services:          
  db:
    image: mysql:5.7
    ports:
      - "8702:3306"
    environment:
      - MYSQL_ROOT_PASSWORD
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    networks:
      - monitor-net
      - web

  redis:
    image: redis
    networks:
      - monitor-net
      - web
    ports: 
      - "8701:6379"

  # docker run -it --rm  --publish 8080:3000   -e AUTHN_URL=http://localhost:8080   -e APP_DOMAINS=localhost   -e DATABASE_URL=sqlite3://:memory:?mode=memory\&cache=shared   -e SECRET_KEY_BASE=changeme   -e HTTP_AUTH_USERNAME=hello   -e HTTP_AUTH_PASSWORD=world   --name authn_app   keratin/authn-server:latest   sh -c "./authn migrate && ./authn server"
  # authentication service for the blackspace platform
  authentication-service:
    container_name: auth #${AUTH_SERVICE_NAME}
    image: keratin/authn-server:latest
    ports:
      -  "8080:3000" # ${AUTHN_PORT}:3000
    environment:
      # - DATABASE_URL=mysql://root@db:3001
      # - REDIS_URL=redis://redis:6379/11
      - AUTHN_URL=http://localhost:8080 #${AUTHN_PRIVATE_BASE_URL}:${AUTHN_PORT}
      - APP_DOMAINS=localhost #${AUTHN_AUDIENCE}
      - SECRET_KEY_BASE=test #${AUTHN_SECRET}
      - DATABASE_URL=sqlite3://:memory:?mode=memory\&cache=shared #sqlite3://localhost/dev
      - REDIS_URL=redis://redis:6379/11
      - HTTP_AUTH_USERNAME=blackspaceinc #${AUTHN_USERNAME}
      - HTTP_AUTH_PASSWORD=blackspaceinc #${AUTHN_PASSWORD}
    depends_on:
      - redis
      - db
    networks:
      - monitor-net
      - web

  # user management service for the blackspace platform
  user-service:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: user-service
    ports:
      - "7777:9000"
    restart: unless-stopped
    networks:
      - monitor-net
      - web
    depends_on:
      - rabbitmq
      - zipkin
      - authentication-service
    volumes:
      - '.:/go/src/github.com/BlackspaceInc/user-management-service'


  # Adds a cron to process spans since midnight every hour, and all spans each day
  # This data is served by http://192.168.99.100:8080/dependency
  #
  # For more details, see https://github.com/openzipkin/docker-zipkin-dependencies
  dependencies:
    image: openzipkin/zipkin-dependencies
    container_name: dependencies
    entrypoint: crond -f
    environment:
      - STORAGE_TYPE=mysql
      - MYSQL_HOST=mysql
      # Add the baked-in username and password for the zipkin-mysql image
      - MYSQL_USER=zipkin
      - MYSQL_PASS=zipkin
      # Uncomment to see dependency processing logs
      - ZIPKIN_LOG_LEVEL=DEBUG
      # Uncomment to adjust memory used by the dependencies job
      - JAVA_OPTS=-verbose:gc -Xms1G -Xmx1G
    depends_on:
    - storage

  storage:
    image: openzipkin/zipkin-mysql
    container_name: mysql
    # Uncomment to expose the storage port for testing
    ports:
      - 3306:3306

  # The zipkin process services the UI, and also exposes a POST endpoint that
  # instrumentation can send trace data to. Scribe is disabled by default.
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    # Environment settings are defined here https://github.com/openzipkin/zipkin/blob/master/zipkin-server/README.md#environment-variables
    # zipkin configuration https://github.com/openzipkin-attic/docker-zipkin
    environment:
      - STORAGE_TYPE=mysql
      # Point the zipkin at the storage backend
      - MYSQL_HOST=mysql
      # Uncomment to enable scribe
      - SCRIBE_ENABLED=true
      # Uncomment to enable self-tracing
      - SELF_TRACING_ENABLED=true
      # Uncomment to enable debug logging
      - JAVA_OPTS=-Dlogging.level.zipkin2=DEBUG
    ports:
      # Port used for the Zipkin UI and HTTP Api
      - 9411:9411
      # Uncomment if you set SCRIBE_ENABLED=true
      - 9410:9410
    depends_on:
      - storage
  
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    env_file: 
      - ./.env
    environment:
      - RABBITMQ_DEFAULT_USER=${AMQP_DEFAULT_USER:-guest}
      - RABBITMQ_DEFAULT_PASS=${AMQP_DEFAULT_PASSWORD:-guest}
    networks:
      - monitor-net
      - web
    ports:
      - 15672:15672
      - 5672:5672
    volumes:
      - 'rabbitmqstats_data:/rabbitmq'

networks:
  monitor-net:
    driver: bridge
  web:
    external: true

volumes:
  prometheus_data: {}
  grafana_data: {}
  rabbitmqstats_data:
    driver: local
  code_volume:
    driver: local