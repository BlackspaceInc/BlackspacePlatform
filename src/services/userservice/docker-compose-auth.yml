version: '3'
services:
  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped

  redis:
    image: redis

  keratin:
    image: keratin/authn-server:latest
    ports:
      - "8765:3000"
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB_NAME:-selfood}?sslmode=disable
      REDIS_URL: redis://redis:6379/0
      AUTHN_URL: http://authn:3000
      APP_DOMAINS: localhost
      SECRET_KEY_BASE: abcdef
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8765"]
        interval: 30s
        timeout: 10s
        retries: 5

volumes:
  postgres:

# curl --location --request POST 'http://localhost:8765/accounts' \ --header 'Content-Type: application/json' \ --header 'Origin: http://localhost:8765' \ --data-raw '{ "username": "Username", "password": "Password" }'
# curl --location --header 'Origin: http://localhost:8765' \ --request POST 'http://localhost:8765/accounts' \ -F 'username=Username' \ -F 'password=Password'
# curl --location --request GET 'http://localhost:8765/accounts/available' \ --header 'Content-Type: application/json' --header 'Origin: http://localhost:8765' \ --data-raw '{ "username": "MatteoAho" }'