(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{91:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return s})),a.d(t,"metadata",(function(){return l})),a.d(t,"rightToc",(function(){return r})),a.d(t,"default",(function(){return d}));var i=a(2),n=a(6),c=(a(0),a(244)),s={title:"Reviewing"},l={unversionedId:"__guidelines/reviewing",id:"__guidelines/reviewing",isDocsHomePage:!1,title:"Reviewing",description:"Pull request reviews are required before merging code into Blackspace. This document",source:"@site/docs/__guidelines/reviewing.md",slug:"/__guidelines/reviewing",permalink:"/docs/__guidelines/reviewing",version:"current",sidebar:"docs",previous:{title:"Releases",permalink:"/docs/__guidelines/releasing"},next:{title:"Security Policy",permalink:"/docs/__guidelines/security"}},r=[{value:"Expectations",id:"expectations",children:[]},{value:"Backward Compatibility",id:"backward-compatibility",children:[]},{value:"Code Of Conduct",id:"code-of-conduct",children:[]},{value:"Dependencies",id:"dependencies",children:[]},{value:"Documentation",id:"documentation",children:[]},{value:"Performance Testing",id:"performance-testing",children:[]},{value:"Single Concern",id:"single-concern",children:[]},{value:"Readability",id:"readability",children:[]},{value:"Safe Code",id:"safe-code",children:[]},{value:"Security",id:"security",children:[]},{value:"Testing",id:"testing",children:[]}],o={rightToc:r};function d(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(c.b)("wrapper",Object(i.a)({},o,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"Pull request reviews are required before merging code into Blackspace. This document\nwill outline Blackspace's pull request review requirements. The following checklist\nshould be used for all pull requests:"),Object(c.b)("ul",{className:"contains-task-list"},Object(c.b)("li",Object(i.a)({parentName:"ul"},{className:"task-list-item"}),Object(c.b)("input",Object(i.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Are you the code owner for the files that have changed? If not, please involve the appropriate code owner(s). (see ",Object(c.b)("a",Object(i.a)({parentName:"li"},{href:"#code-owners"}),"Code Owners"),")"),Object(c.b)("li",Object(i.a)({parentName:"ul"},{className:"task-list-item"}),Object(c.b)("input",Object(i.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Is the code addressing a single purpose? If not, the pull request should be broken up. (see ",Object(c.b)("a",Object(i.a)({parentName:"li"},{href:"#single-purpose"}),"Single Purpose"),")"),Object(c.b)("li",Object(i.a)({parentName:"ul"},{className:"task-list-item"}),Object(c.b)("input",Object(i.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Is the code readable and maintainable? If not, suggest ways to improve this. (see ",Object(c.b)("a",Object(i.a)({parentName:"li"},{href:"#readability"}),"Readability"),")"),Object(c.b)("li",Object(i.a)({parentName:"ul"},{className:"task-list-item"}),Object(c.b)("input",Object(i.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Is the code reasonably tested? If not, tests should be improved. (see ",Object(c.b)("a",Object(i.a)({parentName:"li"},{href:"#testing"}),"Testing"),")"),Object(c.b)("li",Object(i.a)({parentName:"ul"},{className:"task-list-item"}),Object(c.b)("input",Object(i.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Is code marked as unsafe? If so, verify that this is necessary. (see ",Object(c.b)("a",Object(i.a)({parentName:"li"},{href:"#safe-code"}),"Safe Code"),")"),Object(c.b)("li",Object(i.a)({parentName:"ul"},{className:"task-list-item"}),Object(c.b)("input",Object(i.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Is backward compatibility broken? If so, can it be avoided or deprecated? (see ",Object(c.b)("a",Object(i.a)({parentName:"li"},{href:"#backwards-compatibility"}),"Backwards compatibility"),")"),Object(c.b)("li",Object(i.a)({parentName:"ul"},{className:"task-list-item"}),Object(c.b)("input",Object(i.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Have dependencies changed? (see ",Object(c.b)("a",Object(i.a)({parentName:"li"},{href:"#dependencies"}),"Dependencies"),")"),Object(c.b)("li",Object(i.a)({parentName:"ul"},{className:"task-list-item"}),Object(c.b)("input",Object(i.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Has the code been explicitly reviewed for security issues? Dependencies included. (see ",Object(c.b)("a",Object(i.a)({parentName:"li"},{href:"#security"}),"Security"),")"),Object(c.b)("li",Object(i.a)({parentName:"ul"},{className:"task-list-item"}),Object(c.b)("input",Object(i.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Is there a risk of performance regressions? If so, have run the ",Object(c.b)("a",Object(i.a)({parentName:"li"},{href:"https://github.com/timberio/Blackspace-test-harness"}),"Blackspace e2e test harness"),"? (see ",Object(c.b)("a",Object(i.a)({parentName:"li"},{href:"#performance-testing"}),"Performance Testing"),")"),Object(c.b)("li",Object(i.a)({parentName:"ul"},{className:"task-list-item"}),Object(c.b)("input",Object(i.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Should documentation be adjusted to reflect any of these changes? (see ",Object(c.b)("a",Object(i.a)({parentName:"li"},{href:"#documentation"}),"Documentation"),")")),Object(c.b)("h2",{id:"expectations"},"Expectations"),Object(c.b)("p",null,"We must endeavour to review all PRs within 2 working days (Monday to Friday - broadly Eastern Time) of submission."),Object(c.b)("h2",{id:"backward-compatibility"},"Backward Compatibility"),Object(c.b)("p",null,"All changes should strive to retain backward compatibility. If a change breaks\nbackward compatibility, it is much less likely to be approved. It is highly\nrecommended you discuss this change with a  team member before investing\ndevelopment time."),Object(c.b)("h2",{id:"code-of-conduct"},"Code Of Conduct"),Object(c.b)("p",null,"If you have not, please review Blackspace's ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"CODE_OF_CONDUCT.md"}),"Code of Conduct"),"\nto ensure reviews are welcoming, open, and respectful."),Object(c.b)("h2",{id:"dependencies"},"Dependencies"),Object(c.b)("p",null,"Dependencies should be ",Object(c.b)("em",{parentName:"p"},"carefully")," selected. Before adding a dependency, we\nshould ask the following questions:"),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},"Is the dependency worth the cost?"),Object(c.b)("li",{parentName:"ol"},"Is the dependency actively and professionally maintained?"),Object(c.b)("li",{parentName:"ol"},"Is the dependency experimental or in the development phase?"),Object(c.b)("li",{parentName:"ol"},"How large is the community?"),Object(c.b)("li",{parentName:"ol"},"Does this dependency have a history of security vulnerabilities?"),Object(c.b)("li",{parentName:"ol"},"Will this affect the portability of Blackspace?"),Object(c.b)("li",{parentName:"ol"},"Does the dependency have a compatible license?")),Object(c.b)("h2",{id:"documentation"},"Documentation"),Object(c.b)("p",null,'Documentation is incredibly important to Blackspace; it is a feature and\ndifferentiator for Blackspace. Pull requests should not be merged without adequate\ndocumentation, nor should they be merged with "TODOs" opened for documentation.'),Object(c.b)("h2",{id:"performance-testing"},"Performance Testing"),Object(c.b)("p",null,"Blackspace currently offers 2 methods for performance testing:"),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},"Internal benchmarks located in the ",Object(c.b)("a",Object(i.a)({parentName:"li"},{href:"benches"}),Object(c.b)("inlineCode",{parentName:"a"},"/benches")," folder"),"."),Object(c.b)("li",{parentName:"ol"},"A full end-to-end test harness for complex\nintegration and performance testing.")),Object(c.b)("h2",{id:"single-concern"},"Single Concern"),Object(c.b)("p",null,"Changes in a pull request should address a single concern. This promotes quality\nreviews through focus. If a pull request addresses multiple concerns, it should\nbe closed and followed up with multiple pull requests addresses each concern\nseparately. If you are unsure about your change, please open an issue and the\nBlackspace maintainers will help guide you through the scope of the change."),Object(c.b)("h2",{id:"readability"},"Readability"),Object(c.b)("p",null,"Code is read more than it is written. Code must be documented and readable."),Object(c.b)("h2",{id:"safe-code"},"Safe Code"),Object(c.b)("p",null,"Unsafe code should be reviewed carefully and avoided if possible. If code is\nmarked as ",Object(c.b)("inlineCode",{parentName:"p"},"unsafe"),", a detailed comment should be added explaining why."),Object(c.b)("h2",{id:"security"},"Security"),Object(c.b)("p",null,"Security is incredibly important to Blackspace. Companies and platform consumers rely on Blackspace to ship\nmission-critical and sensitive products. Please review the code explicitly for\nsecurity issues. See ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"SECURITY.md"}),"Blackspace's Security guide for more info"),"."),Object(c.b)("h2",{id:"testing"},"Testing"),Object(c.b)("p",null,"Code should be reasonably tested. Blackspace does not require 100% test coverage.\nWe believe this level of coverage is unnecessary. As a general rule of thumb,\nwe strive for 80% coverage, beyond this returns are diminishing. Please use\nyour best judgment, some code requires more testing than others depending\non its importance."))}d.isMDXComponent=!0}}]);