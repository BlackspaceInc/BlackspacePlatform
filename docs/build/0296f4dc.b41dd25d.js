(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{146:function(e,t,r){"use strict";r.d(t,"a",(function(){return p})),r.d(t,"b",(function(){return m}));var n=r(0),a=r.n(n);function c(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){c(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=a.a.createContext({}),b=function(e){var t=a.a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=b(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,c=e.originalType,o=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),p=b(r),d=n,m=p["".concat(o,".").concat(d)]||p[d]||u[d]||c;return r?a.a.createElement(m,l(l({ref:t},s),{},{components:r})):a.a.createElement(m,l({ref:t},s))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=r.length,o=new Array(c);o[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var s=2;s<c;s++)o[s]=r[s];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},52:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return o})),r.d(t,"metadata",(function(){return l})),r.d(t,"rightToc",(function(){return i})),r.d(t,"default",(function(){return b}));var n=r(2),a=r(6),c=(r(0),r(146)),o={id:"celery-integration",title:"Using celery as a task runner",sidebar_label:"Celery Integration"},l={unversionedId:"celery-integration",id:"celery-integration",isDocsHomePage:!1,title:"Using celery as a task runner",description:"Celery is a simple, flexible, and reliable distributed task queue.",source:"@site/docs/celery-integration.md",permalink:"/celery-integration",editUrl:"https://github.com/BlackspaceInc/BlackspacePlatform/edit/master/website/docs/celery-integration.md",sidebar_label:"Celery Integration"},i=[{value:"Starting Celery workers",id:"starting-celery-workers",children:[]},{value:"Configuring Celery",id:"configuring-celery",children:[]}],s={rightToc:i};function b(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},s,r,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"http://docs.celeryproject.org/en/latest/index.html"}),"Celery")," is a simple, flexible, and reliable distributed task queue."),Object(c.b)("h2",{id:"starting-celery-workers"},"Starting Celery workers"),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},"To manage the task queue we'll need what they call a ",Object(c.b)("em",{parentName:"li"},"broker"),". It's easy to start one:")),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"docker run --detach -p 5672:5672 rabbitmq\n#=> runs in the backgroud, stays alive\n")),Object(c.b)("ol",{start:2},Object(c.b)("li",{parentName:"ol"},"Next you need to start at least a ",Object(c.b)("em",{parentName:"li"},"worker")," that will execute async tasks:")),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"pip install celery\ncelery -A qaboard.runners.celery_app worker --loglevel=info\n")),Object(c.b)("ol",{start:3},Object(c.b)("li",{parentName:"ol"},"Next, use QA-Board's Celery runner:")),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"qa batch --runner=celery my-batch\n")),Object(c.b)("h2",{id:"configuring-celery"},"Configuring Celery"),Object(c.b)("p",null,"To configure Celery at the ",Object(c.b)("strong",{parentName:"p"},"project level"),":"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml",metastring:'title="qaboard.yaml"',title:'"qaboard.yaml"'}),'runners:\n  default: celery\n  celery:\n    # Those are the default settings:\n    broker_url: pyamqp://guest@localhost//  # also read from ENV vars with CELERY_BROKER_URL\n    result_backend: rpc://                  # also read from ENV vars with CELERY_RESULT_BACKEND\n    # To know all the options and tweak priorities, rate-limiting... Read:\n    # http://docs.celeryproject.org/en/latest/getting-started/first-steps-with-celery.html#configuration\n    # http://docs.celeryproject.org/en/latest/userguide/configuration.html#configuration\n    # For example:\n    timezone: Europe/Paris\n\n    # By default tasks will be named "qaboard" unless you define\n    qaboard_task_name: qaboard\n')),Object(c.b)("p",null,"It's often useful to give ",Object(c.b)("strong",{parentName:"p"},"batches")," their own settings. For instance you may want to use different queues if you manage different types of resources (GPUs, Windows/Linux/Android...):"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"# On a server with a GPU:\ncelery -A qaboard.runners.celery_app worker --concurrency=1 --queues gpu,large-gpu\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml",metastring:'{7-9} title="qa/batches.yaml"',"{7-9}":!0,title:'"qa/batches.yaml"'}),"my-batch-that-needs-a-gpu:\n  inputs:\n  - my/training/images\n  configuration:\n  - hyperparams.yaml\n  celery:\n    task_routes:\n      qaboard: gpu\n")),Object(c.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(c.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(c.b)("h5",{parentName:"div"},Object(c.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(c.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(c.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"tip")),Object(c.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(c.b)("p",{parentName:"div"},"Read ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"http://docs.celeryproject.org/en/latest/getting-started/first-steps-with-celery.html"}),"Celery's tutorial")))),Object(c.b)("p",null,"Celery's ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.celeryproject.org/en/stable/userguide/workers.html"}),"worker user guide")," has lots of information on how to run ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.celeryproject.org/en/stable/userguide/daemonizing.html#daemonizing"}),"worker in the background"),", set ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.celeryproject.org/en/stable/userguide/workers.html#concurrency"}),"concurrency"),"... Check it out too as needed!"),Object(c.b)("p",null,"If you need worker monitoring, read the ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"http://docs.celeryproject.org/en/latest/userguide/monitoring.html"}),"docs"),"."))}b.isMDXComponent=!0}}]);