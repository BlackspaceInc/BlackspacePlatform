(window.webpackJsonp=window.webpackJsonp||[]).push([[122],{189:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return r})),a.d(t,"rightToc",(function(){return c})),a.d(t,"default",(function(){return b}));var n=a(2),i=a(6),l=(a(0),a(244)),o={title:"Contributing"},r={unversionedId:"__guidelines/contributing",id:"__guidelines/contributing",isDocsHomePage:!1,title:"Contributing",description:"First, thank you for contributing to the Blackspace Platform! The goal of this document is to",source:"@site/docs/__guidelines/contributing.md",slug:"/__guidelines/contributing",permalink:"/docs/__guidelines/contributing",version:"current",sidebar:"docs",previous:{title:"KEYWORD",permalink:"/docs/__guidelines/template/sql"},next:{title:"Releases",permalink:"/docs/__guidelines/releasing"}},c=[{value:"Assumptions",id:"assumptions",children:[]},{value:"Your First Contribution",id:"your-first-contribution",children:[]},{value:"Change Control",id:"change-control",children:[]},{value:"Onboarding",id:"onboarding",children:[{value:"Git Branches",id:"git-branches",children:[]},{value:"Git Commits",id:"git-commits",children:[]},{value:"Github Pull Requests",id:"github-pull-requests",children:[]},{value:"CI",id:"ci",children:[]}]},{value:"Development",id:"development",children:[{value:"Setup",id:"setup",children:[]},{value:"The Basics",id:"the-basics",children:[]},{value:"Guidelines",id:"guidelines",children:[]},{value:"Testing",id:"testing",children:[]},{value:"Benchmarking",id:"benchmarking",children:[]},{value:"Profiling",id:"profiling",children:[]},{value:"Kubernetes",id:"kubernetes",children:[]}]},{value:"Humans",id:"humans",children:[{value:"Documentation",id:"documentation",children:[]},{value:"Changelog",id:"changelog",children:[]}]},{value:"Security",id:"security",children:[]},{value:"Legal",id:"legal",children:[{value:"DCO",id:"dco",children:[]}]},{value:"FAQ",id:"faq",children:[{value:"What if I forgot to sign my commits?",id:"what-if-i-forgot-to-sign-my-commits",children:[]}]}],s={rightToc:c};function b(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"First, thank you for contributing to the Blackspace Platform! The goal of this document is to\nprovide everything you need to start contributing to Blackspace properly. The\nfollowing TOC is sorted progressively, starting with the basics and\nexpanding into more specifics."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#assumptions"}),"Assumptions")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#your-first-contribution"}),"Your First Contribution")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#change-control"}),"Change Control")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#onboarding"}),"Onboarding"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#git-branches"}),"Git Branches")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#git-commits"}),"Git Commits"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#style"}),"Style")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#signing-off"}),"Signing-off")))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#github-pull-requests"}),"Github Pull Requests"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#title"}),"Title")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#reviews--approvals"}),"Reviews & Approvals")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#merge-style"}),"Merge Style")))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#ci"}),"CI")))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#development"}),"Development"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#setup"}),"Setup"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#using-a-docker-environment"}),"Using a Docker environment")))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#the-basics"}),"The Basics"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#directory-structure"}),"Directory Structure")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#makefile"}),"Makefile")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#code-style"}),"Code Style")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#feature-flags"}),"Feature flags")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#dependencies"}),"Dependencies")))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#guidelines"}),"Guidelines"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#service-healthchecks"}),"Service Healthchecks")))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#testing"}),"Testing"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#sample-logs"}),"Sample Logs")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#tips-and-tricks"}),"Tips and Tricks")))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#benchmarking"}),"Benchmarking")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#profiling"}),"Profiling")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#kubernetes"}),"Kubernetes"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#kubernetes-dev-flow"}),"Kubernetes Dev Flow"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#requirements"}),"Requirements")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#the-dev-flow"}),"The dev flow")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#troubleshooting"}),"Troubleshooting")))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#kubernetes-e2e-tests"}),"Kubernetes E2E tests"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#requirements-1"}),"Requirements")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#running-the-e2e-tests"}),"Running the E2E tests")))))))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#humans"}),"Humans"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#documentation"}),"Documentation")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#changelog"}),"Changelog"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#what-makes-a-highlight-noteworthy"}),"What makes a highlight noteworthy?")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#how-is-a-highlight-different-from-a-blog-post"}),"How is a highlight different from a blog post?")))))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#security"}),"Security")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#legal"}),"Legal"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#dco"}),"DCO"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#trivial-changes"}),"Trivial changes")))))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#faq"}),"FAQ"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#what-if-i-forgot-to-sign-my-commits"}),"What if I forgot to sign my commits?"))))),Object(l.b)("h2",{id:"assumptions"},"Assumptions"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},Object(l.b)("strong",{parentName:"li"},"You're familiar with ",Object(l.b)("a",Object(n.a)({parentName:"strong"},{href:"https://github.com"}),"Github")," and the pull request\nworkflow.")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("strong",{parentName:"li"},"You've read Blackspace's ",Object(l.b)("a",Object(n.a)({parentName:"strong"},{href:"https://github.io/blackspace/docs/"}),"docs"),".")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("strong",{parentName:"li"},"You know about the ",Object(l.b)("a",Object(n.a)({parentName:"strong"},{href:"https://gitter.im/BlackspaceInc/community"}),"Blackspace community"),".\nPlease use this for help.")),Object(l.b)("li",{parentName:"ol"},"You are familiar with and have read the ",Object(l.b)("strong",{parentName:"li"},"style guides")," for this project present in the ",Object(l.b)("strong",{parentName:"li"},"/.style_guide/*"))),Object(l.b)("h2",{id:"your-first-contribution"},"Your First Contribution"),Object(l.b)("p",null,"Run the following scripts/commands in the terminal to download conform and set up a commit message hook locally."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"go get github.com/talos-systems/conform\n")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"cat <<EOF | tee .git/hooks/commit-msg\n#!/bin/sh\n\nconform enforce --commit-msg-file \\$1\nEOF\nchmod +x .git/hooks/commit-msg\n")),Object(l.b)("ol",{start:0},Object(l.b)("li",{parentName:"ol"},"Read the style guides in ",Object(l.b)("strong",{parentName:"li"},"/.style_guide/*")),Object(l.b)("li",{parentName:"ol"},"Ensure your change has an issue! Find an\n",Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/BlackspaceInc/BlackspacePlatform/issues"}),"existing issue")," or ",Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/BlackspaceInc/BlackspacePlatform/issues/new"}),"open a new issue"),".",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"This is where you can get a feel if the change will be accepted or not.\nChanges that are questionable will have a ",Object(l.b)("inlineCode",{parentName:"li"},"needs: approval")," label."))),Object(l.b)("li",{parentName:"ol"},"Once an issue is obtained, ",Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"https://help.github.com/en/github/getting-started-with-github/fork-a-repo"}),"fork the Blackspace repository from dev branch")," in your own local instance. "),Object(l.b)("li",{parentName:"ol"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/creating-and-deleting-branches-within-your-repository"}),"Create a new Git branch off of the dev branch"),".",Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"   git clone https://github.com/BlackspaceInc/BlackspacePlatform.git\n   git checkout -b new_branch_name dev\n"))),Object(l.b)("li",{parentName:"ol"},"Review the Blackspace ",Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#workflow"}),"workflow")," and ",Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#development"}),"development")," guidelines."),Object(l.b)("li",{parentName:"ol"},"Make your changes."),Object(l.b)("li",{parentName:"ol"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/creating-a-pull-request-from-a-fork"}),"Submit the branch as a pull request")," to the main Blackspace\nrepo ",Object(l.b)("inlineCode",{parentName:"li"},"dev branch"),". A Blackspace team member should comment and/or review your pull request\nwithin a few days. Although, depending on the circumstances, it may take\nlonger.")),Object(l.b)("h2",{id:"change-control"},"Change Control"),Object(l.b)("h2",{id:"onboarding"},"Onboarding"),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Start")," documentation site locally to read onboarding resources."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"make doc-site\n")),Object(l.b)("h3",{id:"git-branches"},"Git Branches"),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"All")," changes must be made in a branch and submitted as ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#pull-requests"}),"pull requests"),".\nBlackspace does not adopt any type of branch naming style, but please use something\ndescriptive of your changes."),Object(l.b)("h3",{id:"git-commits"},"Git Commits"),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"All")," commits should be concise and adequately describe the change performed. Please ensure you maintain small commits\nand perform on thing at a time. Each commit should be associated with one distinct change. Commit should follow a distinct framework"),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"Commits should have follow the following framework"),Object(l.b)("p",{parentName:"blockquote"},'git commit -sm "',"[Tag]",":","[Description]",'"'),Object(l.b)("p",{parentName:"blockquote"},"Acceptable Tags :"),Object(l.b)("blockquote",{parentName:"blockquote"},Object(l.b)("p",{parentName:"blockquote"},"fix:, feat:, build:, chore:, ci:, docs:, style:, refactor:, perf:, test:")),Object(l.b)("p",{parentName:"blockquote"},'example: git commit -sm "chore: remove unecessary configs"')),Object(l.b)("h4",{id:"style"},"Style"),Object(l.b)("p",null,"Please ensure your commits are small and focused; they should tell a story of\nyour change. This helps reviewers to follow your changes, especially for more\ncomplex changes."),Object(l.b)("h4",{id:"signing-off"},"Signing-off"),Object(l.b)("p",null,"Your commits must include a ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://developercertificate.org/"}),"DCO")," signature.\nThis is simpler than it sounds; it just means that all of your commits\nmust contain:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-text"}),"Signed-off-by: Joe Smith <joe.smith@email.com>\n")),Object(l.b)("p",null,"Git makes this easy by adding the ",Object(l.b)("inlineCode",{parentName:"p"},"-s")," or ",Object(l.b)("inlineCode",{parentName:"p"},"--signoff")," flags when you commit:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"git commit -sm 'My commit message'\n")),Object(l.b)("p",null,"We also included a ",Object(l.b)("inlineCode",{parentName:"p"},"make signoff")," target that handles this for you if\nyou forget."),Object(l.b)("h3",{id:"github-pull-requests"},"Github Pull Requests"),Object(l.b)("p",null,"Once your changes are ready you must submit your branch as a ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/timberio/Blackspace/pulls"}),"pull \\\nrequest"),"."),Object(l.b)("h4",{id:"title"},"Title"),Object(l.b)("p",null,"The pull request title must follow the format outlined in the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.conventionalcommits.org"}),"conventional \\\ncommits spec"),".\n",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.conventionalcommits.org"}),"Conventional commits")," is a standardized\nformat for commit messages. Blackspace only requires this format for commits on\nthe ",Object(l.b)("inlineCode",{parentName:"p"},"master")," branch. And because Blackspace squashes commits before merging\nbranches, this means that only the pull request title must conform to this\nformat. Blackspace performs a pull request check to verify the pull request title\nin case you forget."),Object(l.b)("p",null,"A list of allowed sub-categories is defined\n",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/BlackspaceInc/BlackspacePlatform/tree/master/.github"}),"here"),"."),Object(l.b)("p",null,"The following are all good examples of pull request titles:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-text"}),"feature(new sink): new `xyz` sink\nfeature(tcp source): add foo bar baz feature\nfix(tcp source): fix foo bar baz bug\nchore: improve build process\ndocs: fix typos\n")),Object(l.b)("h4",{id:"reviews--approvals"},"Reviews & Approvals"),Object(l.b)("p",null,"All pull requests must be reviewed and approved by at least one Blackspace team\nmember. The review process is outlined in the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"REVIEWING.md"}),"Review guide"),"."),Object(l.b)("h4",{id:"merge-style"},"Merge Style"),Object(l.b)("p",null,"All pull requests are squashed and merged. We generally discourage large pull\nrequests that are over 300-500 lines of diff. If you would like to propose\na change that is larger we suggest coming onto the team's gitter or slack channel and\ndiscuss it with one of your counterparts. This way we can talk through the\nsolution and discuss if a change that large is even needed! This overall\nwill produce a quicker response to the change and likely produce code that\naligns better with our process."),Object(l.b)("h3",{id:"ci"},"CI"),Object(l.b)("p",null,"Currently Blackspace uses Github Actions to run tests. The workflows are defined in\n",Object(l.b)("inlineCode",{parentName:"p"},".github/workflows"),"."),Object(l.b)("p",null,"Tests are run for all changes except those that have the label:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-text"}),"ci-condition: skip\n")),Object(l.b)("p",null,"Github Actions is responsible for releasing updated versions of Blackspace through\nvarious channels."),Object(l.b)("p",null,"Some long running tests will only run daily, rather than on every pull request.\nIf needed, an administrator can kick off these tests manually."),Object(l.b)("h2",{id:"development"},"Development"),Object(l.b)("h3",{id:"setup"},"Setup"),Object(l.b)("p",null,"We're super excited to have you interested in working on Blackspace! Before you start you should pick how you want to develop."),Object(l.b)("p",null,"For small or first-time contributions, we recommend the Docker method. If you do a lot of contributing, try adopting the Nix method! It'll be way faster and feel more smooth. Prefer to do it yourself? That's fine too!"),Object(l.b)("h4",{id:"using-a-docker-environment"},"Using a Docker environment"),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},Object(l.b)("strong",{parentName:"p"},"Targets:")," You can use this method to produce AARCH64, Arm6/7, as well as x86/64 Linux builds.")),Object(l.b)("p",null,"Since not everyone has a full working native environment, or can use Nix, we will take our Nix environment and stuff it into orchestrated Docker containers!"),Object(l.b)("p",null,"This is ideal for users who want it to \"Just work\" and just want to start contributing. It's also what we use for our CI, so you know if it breaks we can't do anything else until we fix it. \ud83d\ude09"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Before you go farther, install Docker through your official package manager, or from the ",Object(l.b)("a",Object(n.a)({parentName:"strong"},{href:"https://docs.docker.com/get-docker/"}),"Docker")," sites.")),Object(l.b)("p",null,"By default, ",Object(l.b)("inlineCode",{parentName:"p"},"make environment")," style tasks will do a ",Object(l.b)("inlineCode",{parentName:"p"},"docker pull")," from Github's container repository, you can ",Object(l.b)("strong",{parentName:"p"},"optionally")," build your own environment while you make your morning coffee \u2615:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"# Optional: Only if you want to go make a coffee\n# sets up environment in which services will run (development or production)\n")),Object(l.b)("p",null,"Now that you have your coffee, you can enter the shell!"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"# Spins up services locally\n# In Debug Mode\n\n\n# In Production mode\n")),Object(l.b)("p",null,"Now you can use the jobs detailed in ",Object(l.b)("strong",{parentName:"p"},'"Bring your own toolbox"')," below."),Object(l.b)("h3",{id:"the-basics"},"The Basics"),Object(l.b)("h4",{id:"directory-structure"},"Directory Structure"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/.github"}),Object(l.b)("inlineCode",{parentName:"a"},"/.github"))," - Store CI workflows for Blackspace."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/.meta"}),Object(l.b)("inlineCode",{parentName:"a"},"/.meta"))," - Project metadata used to generate documentation."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/.style_guide"}),Object(l.b)("inlineCode",{parentName:"a"},"/.style_guide"))," -  Witholds project styleguides and best practices"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/benches"}),Object(l.b)("inlineCode",{parentName:"a"},"/benches"))," - Internal benchmarks."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/docs"}),Object(l.b)("inlineCode",{parentName:"a"},"/docs"))," -  Store documentation."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/istio-manifests"}),Object(l.b)("inlineCode",{parentName:"a"},"/istio-manifests"))," -  Istio service mesh and production manifests."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/kubernetes-manifests"}),Object(l.b)("inlineCode",{parentName:"a"},"/kubernetes-manifests"))," -  Kubernetes production manifests."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/linkerd-manifests"}),Object(l.b)("inlineCode",{parentName:"a"},"/linkerd-manifests"))," -  Linkerd service mesh and production manifests."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/monitoring"}),Object(l.b)("inlineCode",{parentName:"a"},"/monitoring"))," -  Production and development configurations for monitoring purposes."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/pb"}),Object(l.b)("inlineCode",{parentName:"a"},"/pb"))," -  Protobuf schema definitions common across all backend services."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/release"}),Object(l.b)("inlineCode",{parentName:"a"},"/release"))," -  Release artifacts."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/scripts"}),Object(l.b)("inlineCode",{parentName:"a"},"/scripts"))," - Scripts used to generate docs and maintain the repo."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/src"}),Object(l.b)("inlineCode",{parentName:"a"},"/src"))," - Blackspace source."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/distribution"}),Object(l.b)("inlineCode",{parentName:"a"},"/distribution"))," - Distribution artifacts for various targets."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/test-harness"}),Object(l.b)("inlineCode",{parentName:"a"},"/test-harness"))," - Utility for E2E tests.")),Object(l.b)("h4",{id:"makefile"},"Makefile"),Object(l.b)("p",null,"Blackspace includes a ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/Makefile"}),Object(l.b)("inlineCode",{parentName:"a"},"Makefile"))," in the root of the repo. This serves\nas a high-level interface for common commands. Running ",Object(l.b)("inlineCode",{parentName:"p"},"make")," will produce\na list of make targets with descriptions. These targets will be referenced\nthroughout this document."),Object(l.b)("h4",{id:"code-style"},"Code Style"),Object(l.b)("p",null,"We use ",Object(l.b)("inlineCode",{parentName:"p"},"gofmt")," to format our code and CI will verify that your\ncode follows\nthis format style. To run the following command make sure ",Object(l.b)("inlineCode",{parentName:"p"},"gofmt")," has been\ninstalled on the stable toolchain locally."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"# To format the code\nmake fmt\n")),Object(l.b)("h4",{id:"feature-flags"},"Feature flags"),Object(l.b)("p",null,"When a new feature or microservice is added, it has to be put\nbehind a feature flag with the corresponding name. This ensures that it is\npossible to customize Blackspace builds as well as turn it on or off in production especially if we foresee issues arising. "),Object(l.b)("p",null,"In addition, during chaos testing it is useful to\ndisable certain services entirely at runtime to better gain visibility over the system's performance in such scenarios. "),Object(l.b)("h4",{id:"dependencies"},"Dependencies"),Object(l.b)("p",null,"Dependencies should be ",Object(l.b)("em",{parentName:"p"},"carefully")," selected and avoided if possible. You can\nsee how dependencies are reviewed in the\n",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/REVIEWING.md#dependencies"}),"Reviewing guide"),"."),Object(l.b)("h3",{id:"guidelines"},"Guidelines"),Object(l.b)("h4",{id:"service-healthchecks"},"Service Healthchecks"),Object(l.b)("p",null,"Services must implement a health check as a means for validating their configuration\nagainst the environment and external systems. Ideally, this allows the system to\ninform users of problems such as insufficient credentials, unreachable\nendpoints, non-existent tables, etc. They're not perfect, however, since it's\nimpossible to exhaustively check for issues that may happen at runtime."),Object(l.b)("p",null,"When implementing health checks, we prefer false positives to false negatives.\nThis means we would prefer that a health check pass and the service then fail than\nto have the health check fail when the service would have been able to run\nsuccessfully."),Object(l.b)("p",null,"A common cause of false negatives in health checks is performing an operation\nthat the service itself does not need. For example, listing all of the available S3\nbuckets and checking that the configured bucket is on that list. The S3 sink\ndoesn't need the ability to list all buckets, and a user that knows that may not\nhave permitted it to do so. In that case, the health check will fail due\nto bad credentials even through its credentials are sufficient for normal\noperation."),Object(l.b)("p",null,"This leads to a general strategy of mimicking what the service itself does.\nUnfortunately, the fact that health checks don't have real events available to\nthem leads to some limitations here. The most obvious example of this is with\nservices where the exact target of a write depends on the value of some field in\nthe event. It also pops up for services\nwhere incoming events are expected to conform to a specific schema. In both\ncases, random test data is reasonably likely to trigger a potentially\nfalse-negative result. Even in simpler cases, we need to think about the effects\nof writing test data and whether the user would find that surprising or\ninvasive. The answer usually depends on the system we're interfacing with."),Object(l.b)("p",null,"In some cases, the right thing to do might be\nnothing at all. If we require dynamic information to figure out what entity\nthat we're even dealing with, odds are very\nlow that we'll be able to come up with a way to meaningfully validate that it's\nin working order. It's perfectly valid to have a health check that falls back to\ndoing nothing when there is a data dependency like this."),Object(l.b)("p",null,"With all that in mind, here is a simple checklist to go over when writing a new\nhealth check:"),Object(l.b)("ul",{className:"contains-task-list"},Object(l.b)("li",Object(n.a)({parentName:"ul"},{className:"task-list-item"}),Object(l.b)("input",Object(n.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Does this check perform different fallible operations from the service itself?"),Object(l.b)("li",Object(n.a)({parentName:"ul"},{className:"task-list-item"}),Object(l.b)("input",Object(n.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Does this check have side effects the user would consider undesirable (e.g. data pollution)?"),Object(l.b)("li",Object(n.a)({parentName:"ul"},{className:"task-list-item"}),Object(l.b)("input",Object(n.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Are there situations where this check would fail but the service would operate normally?")),Object(l.b)("p",null,'Not all of the answers need to be a hard "no", but we should think about the\nlikelihood that any "yes" would lead to false negatives and balance that against\nthe usefulness of the check as a whole for finding problems. Because we have the\noption to disable individual health checks, there\'s an escape hatch for users\nthat fall into a false negative circumstance. Our goal should be to minimize the\nlikelihood of users needing to pull that lever while still making a good effort\nto detect common problems.'),Object(l.b)("h3",{id:"testing"},"Testing"),Object(l.b)("p",null,"You can run Blackspace's tests via the ",Object(l.b)("inlineCode",{parentName:"p"},"make test")," command. Our tests either use Docker\ncompose to spin up mock services for testing or spins up the necessary service containers in a local minikube cluster."),Object(l.b)("h4",{id:"sample-logs"},"Sample Logs"),Object(l.b)("p",null,"We use ",Object(l.b)("inlineCode",{parentName:"p"},"flog")," to build a sample set of log files to test sending logs from a\nfile to our local Kibana stack. This can be done with the following commands on mac with homebrew.\nInstallation instruction for flog can be found\n",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/mingrammer/flog#installation"}),"here"),"."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"flog --bytes $((100 * 1024 * 1024)) > sample.log\n")),Object(l.b)("p",null,"This will create a ",Object(l.b)("inlineCode",{parentName:"p"},"100MiB")," sample log file in the ",Object(l.b)("inlineCode",{parentName:"p"},"sample.log")," file."),Object(l.b)("h4",{id:"tips-and-tricks"},"Tips and Tricks"),Object(l.b)("p",null,"If you are developing a particular component and want to quickly iterate on unit\ntests related only to this component, run the unit tests from the folder in which the component was developed."),Object(l.b)("h3",{id:"benchmarking"},"Benchmarking"),Object(l.b)("p",null,"All benchmarks are placed in the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/benches"}),Object(l.b)("inlineCode",{parentName:"a"},"/benches"))," folder. You can\nrun benchmarks via the ",Object(l.b)("inlineCode",{parentName:"p"},"make benchmarks")," command. In addition, Blackspace\nmaintains a full ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/timberio/vector-test-harness"}),"test hardness")," for complex\nend-to-end integration and performance testing."),Object(l.b)("h3",{id:"profiling"},"Profiling"),Object(l.b)("p",null,"If you're trying to improve Blackspace's performance (or understand why your change\nmade it worse), profiling is a useful tool for seeing where time is being spent."),Object(l.b)("p",null,"While there are a bunch of useful profiling tools, a simple place to get started\nis with Linux's ",Object(l.b)("inlineCode",{parentName:"p"},"perf"),". Before getting started, you'll likely need to give\nyourself access to collect stats:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-sh"}),"echo -1 | sudo tee /proc/sys/kernel/perf_event_paranoid\n")),Object(l.b)("p",null,"You'll also want to edit ",Object(l.b)("inlineCode",{parentName:"p"},".env")," files specific to the services you have updated and make sure that Blackspace is being built\nwith debug symbols in release mode. This ensures that you'll get human-readable\ninfo in the eventual output:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-.env"}),"debug = true\n")),Object(l.b)("p",null,"Then you can start up a release build of Blackspace with whatever config you're\ninterested in profiling."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-sh"}),"make release\n")),Object(l.b)("p",null,"Once it's started, use the ",Object(l.b)("inlineCode",{parentName:"p"},"ps")," tool (or equivalent) to make a note of its PID.\nWe'll use this to tell ",Object(l.b)("inlineCode",{parentName:"p"},"perf")," which process we would like it to collect data\nabout."),Object(l.b)("p",null,"The next step is somewhat dependent on the config you're testing. For this\nexample, let's assume you're using a simple TCP-mode socket source listening on\nport 9000. Let's also assume that you have a large file of example input in\n",Object(l.b)("inlineCode",{parentName:"p"},"access.log")," (you can use a tool like ",Object(l.b)("inlineCode",{parentName:"p"},"flog")," to generate this)."),Object(l.b)("p",null,"With all that prepared, we can send our test input to Blackspace and collect data\nwhile it is under load:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-sh"}),"perf record -F99 --call-graph dwarf -p $Blackspace_PID socat -dd OPEN:access.log TCP:localhost:9000\n")),Object(l.b)("p",null,"This instructs ",Object(l.b)("inlineCode",{parentName:"p"},"perf")," to collect data from our already-running Blackspace process\nfor the duration of the ",Object(l.b)("inlineCode",{parentName:"p"},"socat")," command. The ",Object(l.b)("inlineCode",{parentName:"p"},"-F")," argument is the frequency at\nwhich ",Object(l.b)("inlineCode",{parentName:"p"},"perf")," should sample the Blackspace call stack. Higher frequencies will\ncollect more data and produce more detailed output, but can produce enormous\namounts of data that take a very long time to process. Using ",Object(l.b)("inlineCode",{parentName:"p"},"-F99")," works well\nwhen your input data is large enough to take a minute or more to process, but\nfeel free to adjust both input size and sampling frequency for your setup."),Object(l.b)("p",null,"It's worth noting that this is not the normal way to profile programs with\n",Object(l.b)("inlineCode",{parentName:"p"},"perf"),". Usually you would simply run something like ",Object(l.b)("inlineCode",{parentName:"p"},"perf record my_program")," and\nnot have to worry about PIDs and such. We differ from this because we're only\ninterested in data about what Blackspace is doing while under load. Running it\ndirectly under ",Object(l.b)("inlineCode",{parentName:"p"},"perf")," would collect data for the entire lifetime of the process,\nincluding startup, shutdown, and idle time. By telling ",Object(l.b)("inlineCode",{parentName:"p"},"perf")," to collect data\nonly while the load generation command is running we get a more focused dataset\nand don't have to worry about timing different commands in quick succession."),Object(l.b)("p",null,"You'll now find a ",Object(l.b)("inlineCode",{parentName:"p"},"perf.data")," file in your current directory with all of the\ninformation that was collected. There are different ways to process this, but\none of the most useful is to create\na ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"http://www.brendangregg.com/flamegraphs.html"}),"flamegraph"),". For this we can\nuse the ",Object(l.b)("inlineCode",{parentName:"p"},"inferno")," tool (available via ",Object(l.b)("inlineCode",{parentName:"p"},"cargo install"),"):"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-sh"}),"perf script | inferno-collapse-perf > stacks.folded\ncat stacks.folded | inferno-flamegraph > flamegraph.svg\n")),Object(l.b)("p",null,"And that's it! You now have a flamegraph SVG file that can be opened and\nnavigated in your favorite web browser."),Object(l.b)("h3",{id:"kubernetes"},"Kubernetes"),Object(l.b)("h4",{id:"kubernetes-dev-flow"},"Kubernetes Dev Flow"),Object(l.b)("p",null,"There is a special flow for when you develop Blackspace especially since it is\ndesigned to work with both docker compose and kubernetes."),Object(l.b)("p",null,"This flow facilitates building Blackspace and deploying it into a cluster."),Object(l.b)("h5",{id:"requirements"},"Requirements"),Object(l.b)("p",null,"There are some extra requirements besides what you'd normally need to work on\nBlackspace:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"linux")," or ",Object(l.b)("inlineCode",{parentName:"li"},"windows")," system"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"https://skaffold.dev/"}),Object(l.b)("inlineCode",{parentName:"a"},"skaffold"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"https://www.docker.com/"}),Object(l.b)("inlineCode",{parentName:"a"},"docker"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"https://kubernetes.io/docs/tasks/tools/install-kubectl/"}),Object(l.b)("inlineCode",{parentName:"a"},"kubectl"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"https://kustomize.io/"}),Object(l.b)("inlineCode",{parentName:"a"},"kustomize"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"https://minikube.sigs.k8s.io/"}),Object(l.b)("inlineCode",{parentName:"a"},"minikube")),"-powered or other k8s cluster")),Object(l.b)("h5",{id:"the-dev-flow"},"The dev flow"),Object(l.b)("p",null,"Once you have the requirements, use the ",Object(l.b)("inlineCode",{parentName:"p"},"make spin-up-kube")," command."),Object(l.b)("p",null,"That's it, just one command should take care of everything!"),Object(l.b)("p",null,"It will"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"build the various ",Object(l.b)("inlineCode",{parentName:"li"},"Blackspace")," service binaries in development mode,"),Object(l.b)("li",{parentName:"ol"},"build docker images from these binaries,"),Object(l.b)("li",{parentName:"ol"},"deploy ",Object(l.b)("inlineCode",{parentName:"li"},"Blackspace services")," into the Kubernetes cluster at your current kubectl context\nusing the built docker image and a mix of our production deployment\nconfiguration defined in the directory of each service")),Object(l.b)("p",null,"As the result of invoking the ",Object(l.b)("inlineCode",{parentName:"p"},"make spin-up-kube")," command, you should see\na ",Object(l.b)("inlineCode",{parentName:"p"},"kubernetes")," process running on your local machine, printing the logs from the\nvarious deployed ",Object(l.b)("inlineCode",{parentName:"p"},"Blackspace service")," instances."),Object(l.b)("p",null,"To stop the process, press ",Object(l.b)("inlineCode",{parentName:"p"},"Ctrl+C"),", and wait for ",Object(l.b)("inlineCode",{parentName:"p"},"kubernetes")," to clean up\nthe cluster state and exit."),Object(l.b)("p",null,"Additionally, you can configure ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://skaffold.dev/docs/"}),"skaffold")," to automatically set up the kubernetes env requirements\nautomatically so we can better focus on development."),Object(l.b)("h5",{id:"troubleshooting"},"Troubleshooting"),Object(l.b)("h4",{id:"kubernetes-e2e-tests"},"Kubernetes E2E tests"),Object(l.b)("p",null,"Kubernetes integration has a lot of parts that can go wrong."),Object(l.b)("p",null,"To cope with the complexity and ensure we maintain high quality, we use\nE2E (end-to-end) tests."),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"E2E tests normally run at CI, so there's typically no need to run them\nmanually.")),Object(l.b)("h5",{id:"requirements-1"},"Requirements"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"kubernetes")," cluster (",Object(l.b)("inlineCode",{parentName:"li"},"minikube")," has special support, but any cluster should\nwork)"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"docker")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"kubectl")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"bash"))),Object(l.b)("p",null,"Blackspace release artifacts are prepared for E2E tests, so the ability to do that\nis required too, see Blackspace ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://Blackspace.dev"}),"docs")," for more details."),Object(l.b)("p",null,"Also:"),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"Note: ",Object(l.b)("inlineCode",{parentName:"p"},"minikube")," has troubles running on ZFS systems. If you're using ZFS, we\nsuggest using a cloud cluster or ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://microk8s.io/"}),Object(l.b)("inlineCode",{parentName:"a"},"minik8s"))," with local\nregistry.")),Object(l.b)("h5",{id:"running-the-e2e-tests"},"Running the E2E tests"),Object(l.b)("p",null,"To run the E2E tests, use the following command:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),'make run-tests "e2e"\n')),Object(l.b)("h2",{id:"humans"},"Humans"),Object(l.b)("p",null,"After making your change, you'll want to prepare it for Blackspace's users\n(mostly humans). This usually entails updating documentation and announcing\nyour feature."),Object(l.b)("h3",{id:"documentation"},"Documentation"),Object(l.b)("p",null,"Documentation is very important to the Blackspace project! In order to keep things\nsimple for contributors, all reference documentation is derived from metadata\nin the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/.meta"}),Object(l.b)("inlineCode",{parentName:"a"},"/.meta")," directory"),". If you add a service, change options,\nor otherwise change anything user facing, you should update the relevant files\nin the ",Object(l.b)("inlineCode",{parentName:"p"},"/.meta")," directory."),Object(l.b)("p",null,"To ensure your change is valid, you can run ",Object(l.b)("inlineCode",{parentName:"p"},"make check-meta"),", which validates\nyour changes against the local ",Object(l.b)("inlineCode",{parentName:"p"},"/.meta/.schema.json")," file."),Object(l.b)("p",null,"The actual website and documentation are generated on the\n",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/BlackspaceInc/BlackspacePlatform"}),Object(l.b)("inlineCode",{parentName:"a"},"Blackspace-website"))," repo."),Object(l.b)("h3",{id:"changelog"},"Changelog"),Object(l.b)("p",null,"Developers do not need to maintain the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/CHANGELOG.md"}),Object(l.b)("inlineCode",{parentName:"a"},"Changelog")),". This is\nautomatically generated via the ",Object(l.b)("inlineCode",{parentName:"p"},"make release")," command. This is made possible\nby the use of ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#title"}),"conventional commit")," titles."),Object(l.b)("h4",{id:"what-makes-a-highlight-noteworthy"},"What makes a highlight noteworthy?"),Object(l.b)("p",null,"It should offer meaningful value to users. This is inherently subjective and\nit is impossible to define exact rules for this distinction. But we should be\ncautious not to dillute the meaning of a highlight by producing low values\nhighlights."),Object(l.b)("h4",{id:"how-is-a-highlight-different-from-a-blog-post"},"How is a highlight different from a blog post?"),Object(l.b)("p",null,"Highlights are not blog posts. They are short one, maybe two, paragraph\nannouncements. Highlights should allude to, or link to, a blog post if\nrelevant."),Object(l.b)("p",null,"Highlights alludes to an\nupcoming blog post. This allows us to communicate a high-value performance\nimprovement without being blocked by an in-depth blog post."),Object(l.b)("h2",{id:"security"},"Security"),Object(l.b)("p",null,"Please see the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/SECURITY.md"}),Object(l.b)("inlineCode",{parentName:"a"},"SECURITY.md")," file"),"."),Object(l.b)("h2",{id:"legal"},"Legal"),Object(l.b)("p",null,"To protect all users of Blackspace, the following legal requirements are made."),Object(l.b)("h3",{id:"dco"},"DCO"),Object(l.b)("p",null,"Blackspace requires all contributors to agree to the DCO. DCO stands for Developer\nCertificate of Origin and is maintained by the\n",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.linuxfoundation.org"}),"Linux Foundation"),". It is an attestation\nattached to every commit made by every developer. It ensures that all committed\ncode adheres to the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"LICENSE.md"}),"Blackspace license")," (Apache 2.0)."),Object(l.b)("h4",{id:"trivial-changes"},"Trivial changes"),Object(l.b)("p",null,"Trivial changes, such as spelling fixes, do not need to be signed.\npatent licenses as well. These rights are granted to everyone."),Object(l.b)("h2",{id:"faq"},"FAQ"),Object(l.b)("h3",{id:"what-if-i-forgot-to-sign-my-commits"},"What if I forgot to sign my commits?"),Object(l.b)("p",null,"No probs! We made this simple with the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"Makefile"}),Object(l.b)("inlineCode",{parentName:"a"},"signoff")," Makefile target"),":"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"make signoff\n")),Object(l.b)("p",null,"If you prefer to do this manually:"),Object(l.b)("p",null,Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://stackoverflow.com/questions/13043357/git-sign-off-previous-commits"}),"https://stackoverflow.com/questions/13043357/git-sign-off-previous-commits")))}b.isMDXComponent=!0}}]);