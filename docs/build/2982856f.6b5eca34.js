(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{146:function(e,t,a){"use strict";a.d(t,"a",(function(){return m})),a.d(t,"b",(function(){return d}));var n=a(0),r=a.n(n);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function b(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=r.a.createContext({}),s=function(e){var t=r.a.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=s(e.components);return r.a.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,c=e.parentName,o=b(e,["components","mdxType","originalType","parentName"]),m=s(a),u=n,d=m["".concat(c,".").concat(u)]||m[u]||p[u]||l;return a?r.a.createElement(d,i(i({ref:t},o),{},{components:a})):r.a.createElement(d,i({ref:t},o))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,c=new Array(l);c[0]=u;var i={};for(var b in t)hasOwnProperty.call(t,b)&&(i[b]=t[b]);i.originalType=e,i.mdxType="string"==typeof e?e:n,c[1]=i;for(var o=2;o<l;o++)c[o]=a[o];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"},73:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return i})),a.d(t,"rightToc",(function(){return b})),a.d(t,"default",(function(){return s}));var n=a(2),r=a(6),l=(a(0),a(146)),c={id:"blackspace-roadmap",sidebar_label:"General Roadmap",title:"Blackspace General Product Roadmap"},i={unversionedId:"technology/roadmap/blackspace-roadmap",id:"technology/roadmap/blackspace-roadmap",isDocsHomePage:!1,title:"Blackspace General Product Roadmap",description:"Project Plan",source:"@site/docs/technology/roadmap/readme.md",permalink:"/technology/roadmap/blackspace-roadmap",editUrl:"https://github.com/BlackspaceInc/BlackspacePlatform/edit/master/website/docs/technology/roadmap/readme.md",sidebar_label:"General Roadmap",sidebar:"docs",previous:{title:"Blackspace Social Roadmap",permalink:"/technology/roadmap/blackspace-social/blackspace-social-roadmap"}},b=[{value:"Contents",id:"contents",children:[]},{value:"Backend Development Deliverables",id:"backend-development-deliverables",children:[{value:"Refactoring",id:"refactoring",children:[]},{value:"Testing",id:"testing",children:[]},{value:"Documentation",id:"documentation",children:[]},{value:"Enhancements",id:"enhancements",children:[]},{value:"Instrumentation",id:"instrumentation",children:[]},{value:"Service Mesh",id:"service-mesh",children:[]},{value:"Deployment &amp; Clusters",id:"deployment--clusters",children:[]},{value:"Microservice Enhancements",id:"microservice-enhancements",children:[]},{value:"Security",id:"security",children:[]}]},{value:"System Architecture Deliverables",id:"system-architecture-deliverables",children:[]},{value:"Frontend Development Deliverables",id:"frontend-development-deliverables",children:[]}],o={rightToc:b};function s(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},o,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"project-plan"},"Project Plan"),Object(l.b)("h2",{id:"contents"},"Contents"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#project-plan"}),"Project Plan"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#contents"}),"Contents")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#backend-development-deliverables"}),"Backend Development Deliverables"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#refactoring"}),"Refactoring")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#testing"}),"Testing")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#documentation"}),"Documentation")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#enhancements"}),"Enhancements")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#instrumentation"}),"Instrumentation")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#service-mesh"}),"Service Mesh")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#deployment--clusters"}),"Deployment & Clusters")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#microservice-enhancements"}),"Microservice Enhancements")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#security"}),"Security")))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#system-architecture-deliverables"}),"System Architecture Deliverables")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#frontend-development-deliverables"}),"Frontend Development Deliverables"))))),Object(l.b)("h2",{id:"backend-development-deliverables"},"Backend Development Deliverables"),Object(l.b)("h3",{id:"refactoring"},"Refactoring"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Refactor backend service code & add concise comments (function, interfaces, ....)")),Object(l.b)("h3",{id:"testing"},"Testing"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Unit test all packages (85% coverage minimum achieved per project)"),Object(l.b)("li",{parentName:"ul"},"Provide E2E api tests at the service livereload"),Object(l.b)("li",{parentName:"ul"},"Load test all backend service api")),Object(l.b)("h3",{id:"documentation"},"Documentation"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Document service interaction formally")),Object(l.b)("h3",{id:"enhancements"},"Enhancements"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Assert service reads from env variables",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"Define .env file for all environments (dev, staging, prod)"))),Object(l.b)("li",{parentName:"ul"},"Enforece security for all backend microservice (follow best-practices)"),Object(l.b)("li",{parentName:"ul"},"Apply more robust http middlewares")),Object(l.b)("h3",{id:"instrumentation"},"Instrumentation"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Emit/implement prometheus metric emitting logic "),Object(l.b)("li",{parentName:"ul"},"Implement distributed tracing for all services"),Object(l.b)("li",{parentName:"ul"},"Implement log aggregation logic via webhooks with ",Object(l.b)("inlineCode",{parentName:"li"},"ELK")," stack"),Object(l.b)("li",{parentName:"ul"},"Provision helm chart template for each service to expedite deployment",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"Define helm chart at the environment level (namespace=prod, dev, staging)"))),Object(l.b)("li",{parentName:"ul"},"Implement circuit breaker logic for all services with smart backoff techniques in face of failure"),Object(l.b)("li",{parentName:"ul"},"Provide GraphQl api for all services"),Object(l.b)("li",{parentName:"ul"},"Provide GRPC endpoints for all Services",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"Provision grpc middlewares"))),Object(l.b)("li",{parentName:"ul"},"Consolidate service level contracts via protobuff")),Object(l.b)("h3",{id:"service-mesh"},"Service Mesh"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Add Istio manifests",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"Configure istio for all environments (feature flag)"))),Object(l.b)("li",{parentName:"ul"},"Add Linkerd manifests",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"Configure linkerd for all environments (feature flag)")))),Object(l.b)("h3",{id:"deployment--clusters"},"Deployment & Clusters"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Define redis cluster for kubernetes"),Object(l.b)("li",{parentName:"ul"},"Define message bus cluster for kubernetes"),Object(l.b)("li",{parentName:"ul"},"Define monitoring cluster for kubernetes")),Object(l.b)("h3",{id:"microservice-enhancements"},"Microservice Enhancements"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Enhance email service functionality",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"Emit metrics & Logs"),Object(l.b)("li",{parentName:"ul"},"Provide distributed tracing func."),Object(l.b)("li",{parentName:"ul"},"Provide more authentication functionality through service",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"password reset"),Object(l.b)("li",{parentName:"ul"},"email resets"),Object(l.b)("li",{parentName:"ul"},"change password"),Object(l.b)("li",{parentName:"ul"},"change email"),Object(l.b)("li",{parentName:"ul"},"invitation only-signup"),Object(l.b)("li",{parentName:"ul"},"email confirmation")))))),Object(l.b)("h3",{id:"security"},"Security"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Secure all backend Services"),Object(l.b)("li",{parentName:"ul"},"Secure database clusters"),Object(l.b)("li",{parentName:"ul"},"Enforce kubernetes security best practices"),Object(l.b)("li",{parentName:"ul"},"Enhance reverse proxy (follow security best practices)")),Object(l.b)("h2",{id:"system-architecture-deliverables"},"System Architecture Deliverables"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"ReArchitect services/backend "),Object(l.b)("li",{parentName:"ul"},"Implement an api gateway ",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"Choose between in-house & open-source api gateway",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"Ensure Api gateway has graphql schema stitching functionality"))))),Object(l.b)("li",{parentName:"ul"},"Enhance nginx reverse proxy"),Object(l.b)("li",{parentName:"ul"},"Experiment with traefik vs nginx")),Object(l.b)("h2",{id:"frontend-development-deliverables"},"Frontend Development Deliverables"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Enhance user experience",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"Use templates & themes"))),Object(l.b)("li",{parentName:"ul"},"Convert project from vanilla javascript to typescript"),Object(l.b)("li",{parentName:"ul"},"Provide unit testing functionality for all react components"),Object(l.b)("li",{parentName:"ul"},"Enhance test coverage to 85%")),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"BlackSpacePlatform")," \xa9 2020"))}s.isMDXComponent=!0}}]);